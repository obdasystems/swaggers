---
openapi: "3.1.0"
info:
  title: "Mastro Web Services"
  description: "RESTFul interface for Mastro"
  version: "1.0.0"
servers:
- url: "http://localhost:8989/mws/rest"
paths:
  /mwsx/owlOntology/{name}/version/avpOntologyTree:
    get:
      tags:
      - "AVP"
      summary: "GET Authorization View Profile Tree to define correct AVP"
      operationId: "get__owlOntology_name_version_avpOntologyTreet"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/authorizationViewProfiles:
    get:
      tags:
      - "AVP"
      summary: "GET mwsx/owlOntology/{name}/version/authorizationViewProfiles"
      operationId: "get_authorizationViewProfiles"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      tags:
      - "AVP"
      summary: "POST mwsx/owlOntology/{name}/version/authorizationViewProfiles"
      operationId: "post_authorizationViewProfiles"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationViewProfileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/authorizationViewProfile/{avpId}:
    put:
      tags:
      - "AVP"
      summary: "PUT mwsx/owlOntology/{name}/version/authorizationViewProfile/{avpId}"
      operationId: "put_authorizationViewProfiles"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "avpId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationViewProfileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/authorizationViewProfile/{avpId}"
      operationId: "delete_authorizationViewProfiles"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "avpId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyDraftInfos:
    get:
      tags:
      - "Ontology Draft"
      summary: "GET mwsx/ontologyDraftInfos"
      operationId: "get_ontologyDrafts"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyDraft/{ontologyName}:
    get:
      summary: "GET mwsx/ontologyDraft/{ontologyName}"
      operationId: "get_ontologyDraft"
      parameters:
      - name: "ontologyName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/ontologyDraft/{ontologyName}"
      operationId: "put_ontologyDraft"
      parameters:
      - name: "ontologyName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RDFGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      tags:
      - "Ontology Draft"
      summary: "POST mwsx/ontologyDraft/{ontologyName}"
      operationId: "post_ontologyDraft"
      parameters:
      - name: "ontologyName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RDFGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/ontologyDraft/{ontologyName}"
      operationId: "delete_ontologyDraft"
      parameters:
      - name: "ontologyName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyDraft/download:
    post:
      summary: "POST mwsx/ontologyDraft/download"
      operationId: "get_ontologyDraft_download"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RDFGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyDraft/convertOWL:
    post:
      summary: "POST mwsx/ontologyDraft/convertOWL"
      operationId: "post_ontologyDraft_convertOWL"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /file:
    get:
      summary: "GET file"
      operationId: "listFiles"
      parameters:
      - name: "name"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileInfo"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT file"
      operationId: "putFile"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    options:
      summary: "OPTIONS file"
      operationId: "options"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /file/list:
    get:
      summary: "GET file/list"
      operationId: "filesNames"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  exampleSetFlag: false
                  types:
                  - "string"
                types:
                - "array"
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ontologyConstraints"
      operationId: "get_ontologyConstraints"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ontologyConstraints/set"
      operationId: "get_ontologyConstraints_check_sets"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/ontologyConstraints/set"
      operationId: "post_ontologyConstraints_check_start"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataQualityCheckSet"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}"
      operationId: "get_ontologyConstraints_check_set_setId"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}"
      operationId: "put_ontologyConstraints_check_start"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataQualityCheckSet"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}"
      operationId: "delete_ontologyConstraints_check_set_setId"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/start/{endpoint}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/start/{endpoint}"
      operationId: "put_ontologyConstraints_check_start"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "endpoint"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "answersBufferSize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "autosave"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "concurrentChecksNumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/stop:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/stop"
      operationId: "put_ontologyConstraints_check_stop"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/removeThread:
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/removeThread"
      operationId: "delete_ontologyConstraints_check_removeThread"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/status:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/status"
      operationId: "get_ontologyConstraints_check_status"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/sets/running:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ontologyConstraints/sets/running"
      operationId: "get_ontologyConstraints_check_running"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/sets/executionLogs:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ontologyConstraints/sets/executionLogs"
      operationId: "get_ontologyConstraints_execution_log"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/executionLog:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/executionLog"
      operationId: "get_ontologyConstraints_checkSetId_execution_log"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/executionLog"
      operationId: "put_ontologyConstraints_checkSetId_execution_timestamps"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/executionLogs/timestamps:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/executionLogs/timestamps"
      operationId: "get_ontologyConstraints_checkSetId_execution_timestamps"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/executionLogs/timestamp/{timestamp}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/executionLogs/timestamp/{timestamp}"
      operationId: "get_ontologyConstraints_checkSetId_execution_timestamp"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "timestamp"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/executionLogs/timestamp/{timestamp}"
      operationId: "delete_ontologyConstraints_checkSetId_execution_timestamp"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "timestamp"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/executionLog/timestamps:
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/executionLog/timestamps"
      operationId: "delete_ontologyConstraints_checkSetId_execution_timestamps"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/dump:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ontologyConstraints/set/{setId}/dump"
      operationId: "get_ontologyConstraints_checkSetId_export"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "setId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ontologyConstraints/sets/dump:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/ontologyConstraints/sets/dump"
      operationId: "post_ontologyConstraints_checkSetId_import"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "importMappingParameters"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataQualityCheckSetDump"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/sparqling/test:
    get:
      summary: "GET mwsx/owlOntology/sparqling/test"
      operationId: "test"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/head/add/{graphElementId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/head/add/{graphElementId}"
      operationId: "addHeadTerm"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/path/{graphElementId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/path/{graphElementId}"
      operationId: "addPathToQueryGraph"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddPathToQueryGraphRequest"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/head/aggregation/{headTerm}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/head/aggregation/{headTerm}"
      operationId: "aggregationHeadTerm"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "headTerm"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/countStar/{active}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/countStar/{active}"
      operationId: "countStarQueryGraph"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "active"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/delete/{graphElementId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/delete/{graphElementId}"
      operationId: "deleteGraphElementId"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/delete/{graphElementId}/class:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/delete/{graphElementId}/class"
      operationId: "deleteGraphElementIdClass"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "classIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/head/delete/{headTerm}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/head/delete/{headTerm}"
      operationId: "deleteHeadTerm"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "headTerm"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/distinct:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/distinct"
      operationId: "distinctQueryGraph"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "distinct"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/filter/edit/{filterId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/filter/edit/{filterId}"
      operationId: "editFilter"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "filterId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/head/function/{headTerm}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/head/function/{headTerm}"
      operationId: "functionHeadTerm"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "headTerm"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node:
    get:
      summary: "GET mwsx/owlOntology/{name}/queryGraph/node"
      operationId: "getQueryGraph"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "clickedClassIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/highlights:
    get:
      summary: "GET mwsx/owlOntology/{name}/highlights"
      operationId: "highligths"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "clickedClassIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "params"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "array"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{endpointName}/highligthsSharedViewsProps:
    get:
      summary: "GET mwsx/endpoint/{endpointName}/highligthsSharedViewsProps"
      operationId: "highligthsSharedViewsProps"
      parameters:
      - name: "endpointName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "clickedClassIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "params"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "array"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/highlights/paths:
    get:
      summary: "GET mwsx/owlOntology/{name}/highlights/paths"
      operationId: "highligthsSharedViewsDataProps"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lastSelectedIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "clickedIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "kShortest"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/highlights/paths/thread/start:
    post:
      summary: "POST mwsx/owlOntology/{name}/highlights/paths/thread/start"
      operationId: "post_shortest_path_thread_start"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lastSelectedIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "clickedIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "kShortest"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/highlights/paths/thread/stop:
    post:
      summary: "POST mwsx/owlOntology/{name}/highlights/paths/thread/stop"
      operationId: "post_shortest_path_thread_stop"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/highlights/paths/thread/result:
    get:
      summary: "GET mwsx/owlOntology/{name}/highlights/paths/thread/result"
      operationId: "get_shortest_path_thread_result"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/highlights/paths/thread/state:
    get:
      summary: "GET mwsx/owlOntology/{name}/highlights/paths/thread/state"
      operationId: "get_shortest_path_thread_state"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/highlights/paths/thread/error:
    get:
      summary: "GET mwsx/owlOntology/{name}/highlights/paths/thread/error"
      operationId: "get_shortest_path_thread_error"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/limit:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/limit"
      operationId: "limitQueryGraph"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "limit"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/filter/{filterId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/filter/{filterId}"
      operationId: "newFilter"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "filterId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/optional/{graphElementId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/optional/{graphElementId}"
      operationId: "newOptionalGraphElementId"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/offset:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/offset"
      operationId: "offsetQueryGraph"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "offset"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/head/orderBy/{headTerm}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/head/orderBy/{headTerm}"
      operationId: "orderByHeadTerm"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "headTerm"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/class/{graphElementId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/class/{graphElementId}"
      operationId: "putQueryGraphClass"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "sourceClassIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "targetClassIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/dataProperty/{graphElementId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/dataProperty/{graphElementId}"
      operationId: "putQueryGraphDataProperty"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "sourceClassIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "predicateIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/annotation/{graphElementId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/annotation/{graphElementId}"
      operationId: "putQueryGraphAnnotation"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "sourceClassIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "predicateIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/join/{graphElementId1}/{graphElementId2}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/join/{graphElementId1}/{graphElementId2}"
      operationId: "putQueryGraphJoin"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId1"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId2"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/objectProperty/{graphElementId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/objectProperty/{graphElementId}"
      operationId: "putQueryGraphObjectProperty"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "sourceClassIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "predicateIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "targetClassIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "isPredicateDirect"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/filter/remove/all:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/filter/remove/all"
      operationId: "removeAllFilters"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/optional/remove/all:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/optional/remove/all"
      operationId: "removeAllOptional"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/filter/remove/{filterId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/filter/remove/{filterId}"
      operationId: "removeFilter"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "filterId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/node/optional/remove/{graphElementId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/node/optional/remove/{graphElementId}"
      operationId: "removeOptionalGraphElementId"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "graphElementId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/head/rename/{headTerm}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/head/rename/{headTerm}"
      operationId: "renameHeadTerm"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "headTerm"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/head/reorderHeadTerms:
    put:
      summary: "PUT mwsx/owlOntology/{name}/queryGraph/head/reorderHeadTerms"
      operationId: "reorderHeadTerms"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/instanceShortestPath:
    post:
      summary: "POST mwsx/owlOntology/{name}/instanceShortestPath"
      operationId: "instanceShortestPathPost"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "sourceInstanceIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "targetInstanceIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "labels"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "distinct"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OntologyPath"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/instanceShortestPath:
    post:
      summary: "POST mwsx/endpoint/{name}/instanceShortestPath"
      operationId: "endpointInstanceShortestPathPost"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "sourceInstanceIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "targetInstanceIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "labels"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "distinct"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OntologyPath"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/constructify:
    post:
      summary: "POST mwsx/owlOntology/{name}/constructify"
      operationId: "constructifyPost"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/queryGraph/visualize:
    post:
      summary: "POST mwsx/owlOntology/{name}/queryGraph/visualize"
      operationId: "visualizePost"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/triplify/start:
    post:
      summary: "POST mwsx/triplify/start"
      operationId: "post_mappings_triplification_start"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OBDATriplificationRequest"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/mappings/{mapID}/triplify/listThreads:
    get:
      summary: "GET mwsx/owlOntology/{name}/mappings/{mapID}/triplify/listThreads"
      operationId: "get_mappings_triplification_list"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/mappings/{mapID}/triplify/listThreadProgresses:
    get:
      summary: "GET mwsx/owlOntology/{name}/mappings/{mapID}/triplify/listThreadProgresses"
      operationId: "get_mappings_triplification_listProgresses"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/triplify/stopAll:
    put:
      summary: "PUT mwsx/triplify/stopAll"
      operationId: "put_mappings_triplification_stop_all"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/triplify/{threadID}/stop:
    put:
      summary: "PUT mwsx/triplify/{threadID}/stop"
      operationId: "put_mappings_triplification_stop"
      parameters:
      - name: "threadID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/triplify/{threadID}:
    delete:
      summary: "DELETE mwsx/triplify/{threadID}"
      operationId: "delete_mappings_triplification_thread"
      parameters:
      - name: "threadID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/triplify/{threadID}/status:
    get:
      summary: "GET mwsx/triplify/{threadID}/status"
      operationId: "get_mappings_triplification_status"
      parameters:
      - name: "threadID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/triplify/{threadID}/report:
    get:
      summary: "GET mwsx/triplify/{threadID}/report"
      operationId: "get_mappings_triplification_report"
      parameters:
      - name: "threadID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/triplify/{threadID}/download:
    get:
      summary: "GET mwsx/triplify/{threadID}/download"
      operationId: "get_mappings_triplification_download"
      parameters:
      - name: "threadID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/triplify/{datasource}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{mapID}/triplify/{datasource}"
      operationId: "get__owlOntology_name_version_query_ID_export_directcsv"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "datasource"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping"
      operationId: "get__owlOntology_name_version_mapping"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping"
      operationId: "post__owlOntology_name_version_mapping_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "create"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "check"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "checkDeprecation"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{mapID}"
      operationId: "get__owlOntology_name_version_mapping_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{mapID}"
      operationId: "put__owlOntology_name_version_mapping_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "create"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{mapID}"
      operationId: "delete__owlOntology_name_version_mapping_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/checkDeprecation:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/checkDeprecation"
      operationId: "get__owlOntology_name_version_mapping_ID_checkDeprecation"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/count:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/count"
      operationId: "get__owlOntology_name_version_mapping_ID_count"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/duplicate:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{mapID}/duplicate"
      operationId: "post__owlOntology_name_version_mapping_ID_duplicate"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "check"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "create"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/backup:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{mapID}/backup"
      operationId: "get__owlOntology_name_version_mapping_ID_backup"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{mapID}/backup"
      operationId: "post__owlOntology_name_version_mapping_ID_restore"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{mapID}/backup"
      operationId: "post__owlOntology_name_version_mapping_ID_backup"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{mapID}/backup"
      operationId: "post__owlOntology_name_version_mapping_ID_delete"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/migrate:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{mapID}/migrate"
      operationId: "post__owlOntology_name_version_mapping_ID_migrate"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "targetVersion"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "check"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "create"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/fixDeprecated:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{mapID}/fixDeprecated"
      operationId: "post__owlOntology_name_version_mapping_ID_fix_deprecated"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/check:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/check"
      operationId: "post__owlOntology_name_version_mapping_ID_check"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "check"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "checkDeprecation"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/info:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/info"
      operationId: "get__owlOntology_name_version_mapping_ID_info"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/templates:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/templates"
      operationId: "get__owlOntology_name_version_mapping_ID_templates"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/templates/refactoring:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{ID}/templates/refactoring"
      operationId: "get__owlOntology_name_version_mapping_ID_templates_refactoring"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateRefactoring"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/template:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/template"
      operationId: "post__owlOntology_name_version_mapping_ID_template"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          text/plain:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{ID}/template"
      operationId: "delete__owlOntology_name_version_mapping_ID_template"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "template"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/assertions/{entityID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/assertions/{entityID}"
      operationId: "get__owlOntology_name_version_mapping_ID_assertions_entityID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "entityID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/assertions:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/assertions"
      operationId: "get__owlOntology_name_version_mapping_ID_assertions"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/assertions"
      operationId: "post__owlOntology_name_version_mapping_ID_assertions"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MappingAssertion"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}"
      operationId: "put__owlOntology_name_version_mapping_ID_assertions"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MappingAssertion"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}"
      operationId: "post__owlOntology_name_version_mapping_ID_assertions"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/views:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/views"
      operationId: "get__owlOntology_name_version_mapping_ID_views"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/views"
      operationId: "post__owlOntology_name_version_mapping_ID_views"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SQLView"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/view/{view_name}/referencedTables:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/view/{view_name}/referencedTables"
      operationId: "get__owlOntology_name_version_mapping_ID_view_refTables"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "view_name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/views/referencedTables:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/views/referencedTables"
      operationId: "get__owlOntology_name_version_mapping_ID_views_allRefTablesMap"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/view/{view_name}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{ID}/view/{view_name}"
      operationId: "put__owlOntology_name_version_mapping_ID_views"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "view_name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SQLView"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{ID}/view/{view_name}"
      operationId: "delete__owlOntology_name_version_mapping_ID_views"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "view_name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/view/refactoring:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{ID}/view/refactoring"
      operationId: "post__owlOntology_name_version_mapping_ID_views_refactoring"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MappingViewAtomRefactoringList"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/view/refactoring"
      operationId: "get__owlOntology_name_version_mapping_ID_views_refactoring"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ViewRefactoring"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/views/{viewID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/views/{viewID}"
      operationId: "get__owlOntology_name_version_mapping_ID_views_viewID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "viewID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/annotations:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/annotations"
      operationId: "get__owlOntology_name_version_intensional_annotation_mapping"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/annotations"
      operationId: "post__owlOntology_name_version_intensional_annotation_mapping_mapId"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntensionalAnnotationMappingAssertion"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/annotation/{mapID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/annotation/{mapID}"
      operationId: "get__owlOntology_name_version_intensional_annotation_mapping_mapId"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{ID}/annotation/{mapID}"
      operationId: "put__owlOntology_name_version_intensional_annotation_mapping_mapId"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntensionalAnnotationMappingAssertion"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{ID}/annotation/{mapID}"
      operationId: "delete__owlOntology_name_version_intensional_annotation_mapping_mapId"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/generateIntensionalAnnotationsOntology:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/generateIntensionalAnnotationsOntology"
      operationId: "post__owlOntology_name_version_mapping_ID_generateIntensionalAnnotationsOntology"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnnotationProcessorConfig"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/annotationProcessorThread/{threadId}/state:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/annotationProcessorThread/{threadId}/state"
      operationId: "get__owlOntology_name_version_mapping_ID_generateIntensionalAnnotationsOntology_threadState"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/annotationProcessorThread/{threadId}/error:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/annotationProcessorThread/{threadId}/error"
      operationId: "get__owlOntology_name_version_mapping_ID_generateIntensionalAnnotationsOntology_error"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/annotationProcessorThread/{threadId}/export:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/annotationProcessorThread/{threadId}/export"
      operationId: "get__owlOntology_name_version_mapping_ID_generateIntensionalAnnotationsOntology_export"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/annotationProcessorThread/{threadId}/stop:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{ID}/annotationProcessorThread/{threadId}/stop"
      operationId: "put__owlOntology_name_version_mapping_ID_generateIntensionalAnnotationsOntology_stop"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/annotationProcessorThread/{threadId}:
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{ID}/annotationProcessorThread/{threadId}"
      operationId: "delete__owlOntology_name_version_mapping_ID_generateIntensionalAnnotationsOntology"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies"
      operationId: "get__owlOntology_name_version_mapping_ID_dependencies"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/inclusions:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/inclusions"
      operationId: "get__owlOntology_name_version_mapping_ID_dependencies_inclusions"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/inclusions"
      operationId: "post__owlOntology_name_version_mapping_ID_dependencies_inclusions"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InclusionDependency"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/inclusion/{incID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/inclusion/{incID}"
      operationId: "get__owlOntology_name_version_mapping_ID_dependencies_inclusion_incID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "incID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/inclusion/{incID}"
      operationId: "put__owlOntology_name_version_mapping_ID_dependencies_inclusion_incID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "incID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InclusionDependency"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/inclusion/{incID}"
      operationId: "delete__owlOntology_name_version_mapping_ID_dependencies_inclusion_incID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "incID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/keys:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/keys"
      operationId: "get__owlOntology_name_version_mapping_ID_dependencies_keys"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/keys"
      operationId: "post__owlOntology_name_version_mapping_ID_dependencies_keys"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyDependency"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/key/{keyID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/key/{keyID}"
      operationId: "get__owlOntology_name_version_mapping_ID_dependencies_key_keyID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "keyID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/key/{keyID}"
      operationId: "put__owlOntology_name_version_mapping_ID_dependencies_key_keyID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "keyID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyDependency"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/key/{keyID}"
      operationId: "delete__owlOntology_name_version_mapping_ID_dependencies_key_keyID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "keyID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/denials:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/denials"
      operationId: "get__owlOntology_name_version_mapping_ID_dependencies_denials"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/denials"
      operationId: "post__owlOntology_name_version_mapping_ID_dependencies_denials"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DenialConstraint"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/denial/{denyID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/denial/{denyID}"
      operationId: "get__owlOntology_name_version_mapping_ID_dependencies_denial_denyID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "denyID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/denial/{denyID}"
      operationId: "put__owlOntology_name_version_mapping_ID_dependencies_denial_denyID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "denyID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DenialConstraint"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{ID}/dependencies/denial/{denyID}"
      operationId: "delete__owlOntology_name_version_mapping_ID_dependencies_denial_denyID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "denyID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/parameter:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/mapping/{ID}/parameter"
      operationId: "put__owlOntology_name_version_mapping_ID_parameter"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MappingParameter"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/parameter"
      operationId: "post__owlOntology_name_version_mapping_ID_parameter"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MappingParameter"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/parameters:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/parameters"
      operationId: "get__owlOntology_name_version_mapping_ID_parameters"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/parameter/{paramName}:
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{ID}/parameter/{paramName}"
      operationId: "delete__owlOntology_name_version_mapping_ID_parameter"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "paramName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}/parameters:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}/parameters"
      operationId: "get__owlOntology_name_version_mapping_ID_ass_parameters"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}/referencedTables:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}/referencedTables"
      operationId: "get__owlOntology_name_version_mapping_ID_ass_refTables"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}/testSQLQuery:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}/testSQLQuery"
      operationId: "get__owlOntology_name_version_mapping_ID_ass_testSQLQuery"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "bufferSize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "dataSourceName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}/testCustomSQLQuery:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}/testCustomSQLQuery"
      operationId: "post__owlOntology_name_version_mapping_ID_ass_testCustomSQLQuery"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "bufferSize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "dataSourceName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/testCustomSQLQuery:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/testCustomSQLQuery"
      operationId: "post__owlOntology_name_version_mapping_ID_ass_testCustomSQLQuery_from_mapAssertion"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "bufferSize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "dataSourceName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MappingAssertion"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}/typeCheckingReport:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/assertion/{mapID}/typeCheckingReport"
      operationId: "get__owlOntology_name_version_mapping_ID_ass_typeCheckingReport"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "dataSourceName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/view/{viewName}/parameters:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/view/{viewName}/parameters"
      operationId: "get__owlOntology_name_version_mapping_ID_view_parameters"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "viewName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/parameter/{paramName}/views:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/parameter/{paramName}/views"
      operationId: "get__owlOntology_name_version_mapping_ID_parameter_views"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "paramName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{ID}/parameter/{paramName}/assertions:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{ID}/parameter/{paramName}/assertions"
      operationId: "get__owlOntology_name_version_mapping_ID_parameter_assertions"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "paramName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/query/{queryID}/delete:
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/mapping/{mapID}/query/{queryID}/delete"
      operationId: "delete__owlOntology_name_version_query_ID_stop"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/query/{queryID}/exportQueryReport:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{mapID}/query/{queryID}/exportQueryReport"
      operationId: "get__owlOntology_name_version_query_ID_exportQueryReport"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/suggestedTemplate/{entityID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{mapID}/suggestedTemplate/{entityID}"
      operationId: "get__owlOntology_name_version_mapID_suggestedTemplate_entityID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "entityID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "projection"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/dataLineage/{entityID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{mapID}/dataLineage/{entityID}"
      operationId: "get__owlOntology_name_version_mapID_entityID_dataLineage"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "entityID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "projection"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/dataLineageProperty/{entityID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{mapID}/dataLineageProperty/{entityID}"
      operationId: "get__owlOntology_name_version_mapID_entityID_dataLineageProperty"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "entityID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/mapping/{mapID}/dataLineageAnnotationProperty:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/mapping/{mapID}/dataLineageAnnotationProperty"
      operationId: "get__owlOntology_name_version_mapID_entityID_dataLineageAnnotationProperty"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mapID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "annotationPropertyIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /ep/sparql:
    post:
      summary: "POST ep/sparql"
      operationId: "postCSVQueryResult"
      parameters:
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "limit"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/csv:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /ep/sparql/csv:
    post:
      summary: "POST ep/sparql/csv"
      operationId: "postCSVQueryResultNoAccept"
      parameters:
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "limit"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /ep/sparqlcount:
    get:
      summary: "GET ep/sparqlcount"
      operationId: "getQueryResultCount"
      parameters:
      - name: "query"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST ep/sparqlcount"
      operationId: "postQueryResultCount"
      parameters:
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx:
    get:
      summary: "GET mwsx"
      operationId: "getMsg"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                exampleSetFlag: false
                types:
                - "string"
              exampleSetFlag: false
  /mwsx/log/{env}/{mode}:
    get:
      summary: "GET mwsx/log/{env}/{mode}"
      operationId: "setLogger"
      parameters:
      - name: "env"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "mode"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                exampleSetFlag: false
                types:
                - "string"
              exampleSetFlag: false
  /mwsx/login:
    get:
      summary: "GET mwsx/login"
      operationId: "get__login"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/logout:
    get:
      summary: "GET mwsx/logout"
      operationId: "get__logout"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/logout/{username}:
    put:
      summary: "PUT mwsx/logout/{username}"
      operationId: "put__logout_by_username"
      parameters:
      - name: "username"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/mastro/version:
    get:
      summary: "GET mwsx/mastro/version"
      operationId: "get__mastro_version"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/jena/version:
    get:
      summary: "GET mwsx/jena/version"
      operationId: "get__jena_version"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlapi/version:
    get:
      summary: "GET mwsx/owlapi/version"
      operationId: "get__owlapi_version"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/resources/ontologies:
    get:
      summary: "GET mwsx/resources/ontologies"
      operationId: "get__resources_ids"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/resources/ontology/{name}/versions:
    get:
      summary: "GET mwsx/resources/ontology/{name}/versions"
      operationId: "get__resources_ids"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/resources/ontology/{name}/version/mappings:
    get:
      summary: "GET mwsx/resources/ontology/{name}/version/mappings"
      operationId: "get__resources_ids"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/resources/datasources:
    get:
      summary: "GET mwsx/resources/datasources"
      operationId: "get__resources_ds_ids"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/resources/endpoints:
    get:
      summary: "GET mwsx/resources/endpoints"
      operationId: "get__resources_ep_ids"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/dashboards:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/dashboards"
      operationId: "get__owlOntology_version_dashboards"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/dashboards"
      operationId: "post__owlOntology_version_dashboards"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dashboard"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/dashboard/{dashboardId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/dashboard/{dashboardId}"
      operationId: "put__owlOntology_version_dashboards"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "dashboardId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dashboard"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/dashboard/{dashboardId}"
      operationId: "delete__owlOntology_version_dashboards"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "dashboardId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology:
    get:
      summary: "GET mwsx/owlOntology"
      operationId: "get__owlOntology"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology"
      operationId: "post__owlOntology_name"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ontology"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology"
      operationId: "delete__all_owlOntologies"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}:
    get:
      summary: "GET mwsx/owlOntology/{name}"
      operationId: "get__owlOntology_name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}"
      operationId: "post__owlOntology_name_version"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "syntax"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}"
      operationId: "delete__owlOntology"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/folder:
    get:
      summary: "GET mwsx/owlOntology/{name}/folder"
      operationId: "get__owlOntology_folder_name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/folder:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/folder"
      operationId: "get__owlOntology_version_folder_name"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version:
    get:
      summary: "GET mwsx/owlOntology/{name}/version"
      operationId: "get__owlOntology_name_version"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "approximated"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version"
      operationId: "delete__owlOntology_name_version"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/ignoredImports:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/ignoredImports"
      operationId: "get__owlOntology_name_version_ignoredImports"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/closed:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/closed"
      operationId: "get__owlOntology_name_version_closed"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/closed"
      operationId: "post__owlOntology_name_version_closed"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "computeEmpties"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "computeGeneralConceptInclusions"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/closed"
      operationId: "delete__owlOntology_name_version_closed"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/closed/{threadId}/status:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/closed/{threadId}/status"
      operationId: "get__owlOntology_name_version_closed_threadId_status"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/closedComputed:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/closedComputed"
      operationId: "get__owlOntology_name_version_closed_computed"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/closingReport:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/closingReport"
      operationId: "get__owlOntology_name_version_closingReport"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/closingReportComputed:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/closingReportComputed"
      operationId: "get__owlOntology_name_version_closingReportComputed"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/hierarchy/owl:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/hierarchy/owl"
      operationId: "get__owlOntology_name_version_hierarchy_owl"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/loaderThreads:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/loaderThreads"
      operationId: "post__owlOntology_name_version_async"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "syntax"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "params"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "computeEmpties"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "computeGeneralConceptInclusions"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/loaderThreads/metadata:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/loaderThreads/metadata"
      operationId: "post__owlOntology_name_version_metadata_async"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "newVersion"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "action"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "params"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "computeEmpties"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "computeGeneralConceptInclusions"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OntologyCatalogOntologyMetadataSet"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/loaderThread/{threadId}/status:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/loaderThread/{threadId}/status"
      operationId: "get__owlOntology_name_version_loader_thread_status"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/loaderThread/{threadId}/report:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/loaderThread/{threadId}/report"
      operationId: "get__owlOntology_name_version_loader_thread_report"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/importFromIRI:
    get:
      summary: "GET mwsx/owlOntology/{name}/importFromIRI"
      operationId: "get__owlOntology_name_version_import_from_iri"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/hierarchy:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/hierarchy"
      operationId: "get__owlOntology_name_version_hierarchy"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/catalog:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/catalog"
      operationId: "get__owlOntology_name_version_catalog"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/info:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/info"
      operationId: "get__owlOntology_name_version_info"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/entities/classes:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/entities/classes"
      operationId: "get__owlOntology_name_version_entities_classes"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/entities/objectProperties:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/entities/objectProperties"
      operationId: "get__owlOntology_name_version_entities_objectProperties"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/entities/dataProperties:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/entities/dataProperties"
      operationId: "get__owlOntology_name_version_entities_dataProperties"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/entities/annotationProperties:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/entities/annotationProperties"
      operationId: "get__owlOntology_name_version_entities_annotationProperties"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/entities:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/entities"
      operationId: "get__owlOntology_name_version_entities"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/entity/{id}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/entity/{id}"
      operationId: "get__owlOntology_name_version_entity"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/alphabet/class/{ID}/logical:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/alphabet/class/{ID}/logical"
      operationId: "get__owlOntology_name_version_alphabet_class_ID_logical"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/annotations:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/annotations"
      operationId: "get__owlOntology_name_version_alphabet_class_ID_annotations"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "entityIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/alphabet/objectProperty/{ID}/logical:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/alphabet/objectProperty/{ID}/logical"
      operationId: "get__owlOntology_name_version_alphabet_objectProperty_ID_logical"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/alphabet/dataProperty/{ID}/logical:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/alphabet/dataProperty/{ID}/logical"
      operationId: "get__owlOntology_name_version_alphabet_dataProperty_ID_logical"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/alphabet/dataProperties/domainAndRange:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/alphabet/dataProperties/domainAndRange"
      operationId: "get__owlOntology_name_version_alphabet_dataProperties_domainAndRange"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/graphol:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/graphol"
      operationId: "get__owlOntology_name_version_graphol"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/graphol"
      operationId: "delete__owlOntology_name_version_graphol"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/gscape:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/gscape"
      operationId: "get__owlOntology_name_version_gscape"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/gscape"
      operationId: "delete__owlOntology_name_version_gscape"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/graphol/check:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/graphol/check"
      operationId: "get__owlOntology_name_version_graphol_check"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/gscape/check:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/gscape/check"
      operationId: "get__owlOntology_name_version_gscape_check"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/owl:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/owl"
      operationId: "get__owlOntology_name_version_owl"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/mastro/instances:
    get:
      summary: "GET mwsx/mastro/instances"
      operationId: "get__available_instances"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/lastLoaded/ontology:
    get:
      summary: "GET mwsx/lastLoaded/ontology"
      operationId: "get_lastLoaded_ontology"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/alphabet/individual/{ID}/logical:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/alphabet/individual/{ID}/logical"
      operationId: "get_individual_info"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/alphabet/search/individual:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/alphabet/search/individual"
      operationId: "get_search_individual_info"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "search"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyDifference/{name}/vs/{otherName}:
    get:
      summary: "GET mwsx/ontologyDifference/{name}/vs/{otherName}"
      operationId: "get_ontology_difference"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "otherName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "otherversion"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/metadata:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/metadata"
      operationId: "get_ontology_metadata_snapshot"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/metadata/missing:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/metadata/missing"
      operationId: "get_ontology_missing_metadata_snapshot"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog:
    get:
      summary: "GET mwsx/ontologyCatalog"
      operationId: "get_ontology_catalog"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/ontologyCatalog"
      operationId: "post_ontology_catalog"
      parameters:
      - name: "action"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "overwrite"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OntologyCatalogEntry"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/ontologyCatalog"
      operationId: "delete_ontology_catalog"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/crossOntologiesMetadata:
    post:
      summary: "POST mwsx/ontologyCatalog/crossOntologiesMetadata"
      operationId: "post_cross_ontologies_individuals_metadata"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OntologyCatalogOntologyMetadataSet"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/ontologyCatalog/crossOntologiesMetadata"
      operationId: "delete_ontology_catalog"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/query/start:
    post:
      summary: "POST mwsx/ontologyCatalog/query/start"
      operationId: "post_ontology_catalog_query_start"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OntologyCatalogQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/query/{queryId}/stop:
    put:
      summary: "PUT mwsx/ontologyCatalog/query/{queryId}/stop"
      operationId: "put_ontology_catalog_query_stop"
      parameters:
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/query/{queryId}:
    delete:
      summary: "DELETE mwsx/ontologyCatalog/query/{queryId}"
      operationId: "delete_ontology_catalog_query_thread_delete"
      parameters:
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/query/{queryId}/status:
    get:
      summary: "GET mwsx/ontologyCatalog/query/{queryId}/status"
      operationId: "get_ontology_catalog_query_status"
      parameters:
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/query/{queryId}/results:
    get:
      summary: "GET mwsx/ontologyCatalog/query/{queryId}/results"
      operationId: "get_ontology_catalog_query_results"
      parameters:
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "offset"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/query/results/export/formats:
    get:
      summary: "GET mwsx/ontologyCatalog/query/results/export/formats"
      operationId: "get_ontology_catalog_query_results_export_formats"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/query/{queryId}/results/export:
    get:
      summary: "GET mwsx/ontologyCatalog/query/{queryId}/results/export"
      operationId: "get_ontology_catalog_query_results_export"
      parameters:
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/download:
    get:
      summary: "GET mwsx/ontologyCatalog/download"
      operationId: "get_ontology_catalog_download"
      parameters:
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/cache/update:
    put:
      summary: "PUT mwsx/ontologyCatalog/cache/update"
      operationId: "put_ontology_catalog_cache_manager_update"
      parameters:
      - name: "languages"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "array"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/cache/update/languages/set:
    put:
      summary: "PUT mwsx/ontologyCatalog/cache/update/languages/set"
      operationId: "put_ontology_catalog_cache_manager_set_languages"
      parameters:
      - name: "languages"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "array"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/cache/update/languages/add:
    put:
      summary: "PUT mwsx/ontologyCatalog/cache/update/languages/add"
      operationId: "put_ontology_catalog_cache_manager_add_language"
      parameters:
      - name: "language"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/cache/results/{queryname}:
    get:
      summary: "GET mwsx/ontologyCatalog/cache/results/{queryname}"
      operationId: "get_ontology_catalog_cache_manager_query_results"
      parameters:
      - name: "queryname"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/cache/results/{queryname}/{language}:
    get:
      summary: "GET mwsx/ontologyCatalog/cache/results/{queryname}/{language}"
      operationId: "get_ontology_catalog_cache_manager_query_results_language"
      parameters:
      - name: "queryname"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "language"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/sparql11-endpoint/query:
    post:
      summary: "POST mwsx/ontologyCatalog/sparql11-endpoint/query"
      operationId: "post_ontology_catalog_sparql11_endpoint_query_form_encoded"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - "default-graph-uri"
              - "named-graph-uri"
              - "query"
              properties:
                query:
                  exampleSetFlag: false
                  types:
                  - "string"
                default-graph-uri:
                  exampleSetFlag: false
                  items:
                    exampleSetFlag: false
                    types:
                    - "string"
                  types:
                  - "array"
                named-graph-uri:
                  exampleSetFlag: false
                  items:
                    exampleSetFlag: false
                    types:
                    - "string"
                  types:
                  - "array"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/sparql11-endpoint/update:
    post:
      summary: "POST mwsx/ontologyCatalog/sparql11-endpoint/update"
      operationId: "post_ontology_catalog_sparql11_endpoint_update_form_encoded"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - "update"
              - "using-graph-uri"
              - "using-named-graph-uri"
              properties:
                update:
                  exampleSetFlag: false
                  types:
                  - "string"
                using-graph-uri:
                  exampleSetFlag: false
                  items:
                    exampleSetFlag: false
                    types:
                    - "string"
                  types:
                  - "array"
                using-named-graph-uri:
                  exampleSetFlag: false
                  items:
                    exampleSetFlag: false
                    types:
                    - "string"
                  types:
                  - "array"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/globalAnnotations:
    get:
      summary: "GET mwsx/globalAnnotations"
      operationId: "get_global_annotations"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/globalAnnotation:
    post:
      summary: "POST mwsx/globalAnnotation"
      operationId: "post_global_annotation"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Entity"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/globalAnnotation/{entityId}:
    delete:
      summary: "DELETE mwsx/globalAnnotation/{entityId}"
      operationId: "delete_global_annotation"
      parameters:
      - name: "entityId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/server/license/info:
    get:
      summary: "GET mwsx/server/license/info"
      operationId: "get_server_license_expiration_date"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/server/storage/report:
    get:
      summary: "GET mwsx/server/storage/report"
      operationId: "get_system_storage_report"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/server/storage/{folder}:
    delete:
      summary: "DELETE mwsx/server/storage/{folder}"
      operationId: "get_empty_folder"
      parameters:
      - name: "folder"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/server/systemSnapshot:
    get:
      summary: "GET mwsx/server/systemSnapshot"
      operationId: "get_system_snapshot"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/server/systemMemory:
    get:
      summary: "GET mwsx/server/systemMemory"
      operationId: "get_system_memory"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/server/userlog/{username}/count:
    get:
      summary: "GET mwsx/server/userlog/{username}/count"
      operationId: "get_userlog_count"
      parameters:
      - name: "username"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/server/userlog/{username}:
    get:
      summary: "GET mwsx/server/userlog/{username}"
      operationId: "get_userlog_count"
      parameters:
      - name: "username"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "start"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "length"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/logger/mastroapi:
    get:
      summary: "GET mwsx/logger/mastroapi"
      operationId: "get_set_mastroapi_logger"
      parameters:
      - name: "mode"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                format: "int32"
                exampleSetFlag: false
                types:
                - "integer"
              exampleSetFlag: false
  /mwsx/logger/service:
    get:
      summary: "GET mwsx/logger/service"
      operationId: "get_set_service_logger"
      parameters:
      - name: "mode"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                format: "int32"
                exampleSetFlag: false
                types:
                - "integer"
              exampleSetFlag: false
  /mwsx/logger:
    get:
      summary: "GET mwsx/logger"
      operationId: "get_set_logger"
      parameters:
      - name: "className"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "packageName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "logLevel"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                format: "int32"
                exampleSetFlag: false
                types:
                - "integer"
              exampleSetFlag: false
  /mwsx/logger/class:
    get:
      summary: "GET mwsx/logger/class"
      operationId: "get_set_service_class"
      parameters:
      - name: "className"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "logLevel"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "action"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                format: "int32"
                exampleSetFlag: false
                types:
                - "integer"
              exampleSetFlag: false
  /mwsx/logger/package:
    get:
      summary: "GET mwsx/logger/package"
      operationId: "get_set_service_package"
      parameters:
      - name: "packageName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "logLevel"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "action"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                format: "int32"
                exampleSetFlag: false
                types:
                - "integer"
              exampleSetFlag: false
  /mwsx/logger/list:
    get:
      summary: "GET mwsx/logger/list"
      operationId: "get_set_service_logger_list"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/logger/monitor:
    get:
      summary: "GET mwsx/logger/monitor"
      operationId: "get_set_monitor_logger"
      parameters:
      - name: "mode"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                format: "int32"
                exampleSetFlag: false
                types:
                - "integer"
              exampleSetFlag: false
  /mwsx/testpath:
    get:
      summary: "GET mwsx/testpath"
      operationId: "testpath"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/error:
    get:
      summary: "GET mwsx/error"
      operationId: "simulate_error"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/poststringasbody:
    post:
      summary: "POST mwsx/poststringasbody"
      operationId: "poststringasbody"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/statics/queryGenerator/:
    post:
      summary: "POST mwsx/statics/queryGenerator/"
      operationId: "post_invoke_query_generator"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeneratorRequest"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/statics/sparql/extractProjectVarNames:
    post:
      summary: "POST mwsx/statics/sparql/extractProjectVarNames"
      operationId: "post_extract_query_head"
      requestBody:
        content:
          text/plain:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/statics/sparql/templateSize:
    post:
      summary: "POST mwsx/statics/sparql/templateSize"
      operationId: "post_extract_template_size"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/statics/reporting/request:
    post:
      summary: "POST mwsx/statics/reporting/request"
      operationId: "post_extract_issue_report"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IssueReportRequest"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/virtualEntities:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/virtualEntities"
      operationId: "get__owlOntology_name_version_ontology_virtuslEntities"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/virtualEntities"
      operationId: "delete__owlOntology_name_version_ontology_virtuslEntities"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/virtualEntities/export:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/virtualEntities/export"
      operationId: "get__owlOntology_name_version_ontology_virtuslEntities_export"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/virtualEntities/import:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/virtualEntities/import"
      operationId: "post__owlOntology_name_version_ontology_virtuslEntities_import"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "additive"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SparqlingVirtualEntities"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/virtualEntity/{vname}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/virtualEntity/{vname}"
      operationId: "get__owlOntology_name_version_ontology_virtuslEntity"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "vname"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/virtualEntity/{vname}"
      operationId: "delete__owlOntology_name_version_ontology_virtuslEntity"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "vname"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/virtualEntity:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/virtualEntity"
      operationId: "put__owlOntology_name_version_ontology_virtuslEntity"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SparqlingVirtualEntity"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/virtualEntity"
      operationId: "post__owlOntology_name_version_ontology_virtuslEntity"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SparqlingVirtualEntity"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/virtualEntity/semantics:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/virtualEntity/semantics"
      operationId: "post__owlOntology_name_version_ontology_virtuslEntity_semantics"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SparqlingVirtualEntity"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/{name}:
    get:
      summary: "GET mwsx/datasource/{name}"
      operationId: "get__datasource"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/datasource/{name}"
      operationId: "put__datasource"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSourceInfoEntry"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/datasource/{name}"
      operationId: "delete__datasource"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/{name}/downloadMetadata:
    get:
      summary: "GET mwsx/datasource/{name}/downloadMetadata"
      operationId: "get__datasource_downloadMetadata"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/{name}/metadata:
    get:
      summary: "GET mwsx/datasource/{name}/metadata"
      operationId: "get__datasource_metadata"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/{name}/updateMetadata:
    put:
      summary: "PUT mwsx/datasource/{name}/updateMetadata"
      operationId: "put__datasource_updateMetadata"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "schemasList"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/{name}/uploadMetadata:
    put:
      summary: "PUT mwsx/datasource/{name}/uploadMetadata"
      operationId: "put__datasource_uploadMetadata"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSourceMetadata"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource:
    get:
      summary: "GET mwsx/datasource"
      operationId: "get__datasource_list"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/datasource"
      operationId: "post__datasource"
      parameters:
      - name: "buildSchema"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "schemasList"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSourceInfoEntry"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/datasource"
      operationId: "delete__all_datasource"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/drivers:
    get:
      summary: "GET mwsx/datasource/drivers"
      operationId: "get__datasource_driver"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/test:
    post:
      summary: "POST mwsx/datasource/test"
      operationId: "testDatasource"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSourceInfoEntry"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/schemas:
    post:
      summary: "POST mwsx/datasource/schemas"
      operationId: "getDatasourceSchemas"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSourceInfoEntry"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/{id}/schemas:
    get:
      summary: "GET mwsx/datasource/{id}/schemas"
      operationId: "getSchemas"
      parameters:
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/schema/{schemaName}/tableNames:
    post:
      summary: "POST mwsx/datasource/schema/{schemaName}/tableNames"
      operationId: "getDatasourceTablesForSchema"
      parameters:
      - name: "schemaName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSourceInfoEntry"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/{id}/tables:
    get:
      summary: "GET mwsx/datasource/{id}/tables"
      operationId: "getTables"
      parameters:
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/{id}/tables/results:
    post:
      summary: "POST mwsx/datasource/{id}/tables/results"
      operationId: "postSQLEx"
      parameters:
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "limit"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/datasource/{id}/table/{tableName}:
    get:
      summary: "GET mwsx/datasource/{id}/table/{tableName}"
      operationId: "getTable"
      parameters:
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "tableName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/system/jdbcDrivers:
    get:
      summary: "GET mwsx/system/jdbcDrivers"
      operationId: "getJdbcDrivers"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/system/jdbcDriver/{driver}:
    get:
      summary: "GET mwsx/system/jdbcDriver/{driver}"
      operationId: "getJdbcDriver"
      parameters:
      - name: "driver"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/system/jdbcDriver/{driver}"
      operationId: "putJdbcDrivers"
      parameters:
      - name: "driver"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JDBCDriver"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/system/jdbcDriver/{driver}"
      operationId: "DELETEJdbcDrivers"
      parameters:
      - name: "driver"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/system/jdbcDriver:
    post:
      summary: "POST mwsx/system/jdbcDriver"
      operationId: "postJdbcDrivers"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JDBCDriver"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraphs:
    get:
      summary: "GET mwsx/knowledgeGraphs"
      operationId: "get__knowledgeGraphs"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/knowledgeGraphs"
      operationId: "post__knowledgeGraphs"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeGraph"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph:
    get:
      summary: "GET mwsx/knowledgeGraph"
      operationId: "get__knowledgeGraph"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/knowledgeGraph"
      operationId: "delete__knowledgeGraph"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/info:
    get:
      summary: "GET mwsx/knowledgeGraph/info"
      operationId: "get__knowledgeGraph_info"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/prefixes:
    get:
      summary: "GET mwsx/knowledgeGraph/prefixes"
      operationId: "get__knowledgeGraph_prefixes"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/knowledgeGraph/prefixes"
      operationId: "post__knowledgeGraph_prefixes"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "overwrite"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/folder:
    get:
      summary: "GET mwsx/knowledgeGraph/folder"
      operationId: "get__knowledgeGraph_folder"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/status:
    get:
      summary: "GET mwsx/knowledgeGraph/status"
      operationId: "get__knowledgeGraph_status"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/status/list:
    get:
      summary: "GET mwsx/knowledgeGraph/status/list"
      operationId: "get__knowledgeGraph_status_list"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/lastLoaded/knowledgeGraph:
    get:
      summary: "GET mwsx/lastLoaded/knowledgeGraph"
      operationId: "get_lastLoaded_knowledgeGraph"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/file:
    get:
      summary: "GET mwsx/knowledgeGraph/file"
      operationId: "get__knowledgeGraph_file"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "fileName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/knowledgeGraph/file"
      operationId: "patch__knowledgeGraph_file"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeGraphFile"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/knowledgeGraph/file"
      operationId: "delete__knowledgeGraph_file"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/classes:
    get:
      summary: "GET mwsx/knowledgeGraph/classes"
      operationId: "get__knowledgeGraph_mentioned_classes"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/classes/stats:
    get:
      summary: "GET mwsx/knowledgeGraph/classes/stats"
      operationId: "get__knowledgeGraph_mentioned_classes_stats"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/class/instances:
    get:
      summary: "GET mwsx/knowledgeGraph/class/instances"
      operationId: "get__knowledgeGraph_mentioned_instances_by_class"
      parameters:
      - name: "kgIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "classIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lang"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/namedGraphs:
    get:
      summary: "GET mwsx/knowledgeGraph/namedGraphs"
      operationId: "get__knowledgeGraph_named_graphs"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/instances:
    get:
      summary: "GET mwsx/knowledgeGraph/instances"
      operationId: "get__knowledgeGraph_instances"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/union:
    put:
      summary: "PUT mwsx/knowledgeGraph/union"
      operationId: "patch__knowledgeGraph_union"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeGraphUnion"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/union/ontology:
    put:
      summary: "PUT mwsx/knowledgeGraph/union/ontology"
      operationId: "patch__knowledgeGraph_union_ontology"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeGraphOntologyUnion"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/union/queryKg:
    put:
      summary: "PUT mwsx/knowledgeGraph/union/queryKg"
      operationId: "patch__knowledgeGraph_union_queryKg"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeGraphDestinationQueryKg"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/query/catalog:
    get:
      summary: "GET mwsx/knowledgeGraph/query/catalog"
      operationId: "get__knowledgeGraph_query_catalog"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/knowledgeGraph/query/catalog"
      operationId: "post__knowledgeGraph_query_catalog"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/query/catalog/export:
    get:
      summary: "GET mwsx/knowledgeGraph/query/catalog/export"
      operationId: "get__knowledgeGraph_query_catalog_export"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/query/catalog/{queryID}:
    get:
      summary: "GET mwsx/knowledgeGraph/query/catalog/{queryID}"
      operationId: "get__knowledgeGraph_query_catalog_queryID"
      parameters:
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/knowledgeGraph/query/catalog/{queryID}"
      operationId: "put__knowledgeGraph_query_catalog_queryID"
      parameters:
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/knowledgeGraph/query/catalog/{queryID}"
      operationId: "delete__knowledgeGraph_query_catalog_queryID"
      parameters:
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/query/start:
    post:
      summary: "POST mwsx/knowledgeGraph/query/start"
      operationId: "post__knowledgeGraph_query_start"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/query/catalog/{queryID}/start:
    post:
      summary: "POST mwsx/knowledgeGraph/query/catalog/{queryID}/start"
      operationId: "post__knowledgeGraph_query_catalog_queryID_start"
      parameters:
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/query/{queryID}/stop:
    put:
      summary: "PUT mwsx/knowledgeGraph/query/{queryID}/stop"
      operationId: "get__knowledgeGraph_query_executionID_stop"
      parameters:
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/query/{queryID}/exportResults/{format}:
    get:
      summary: "GET mwsx/knowledgeGraph/query/{queryID}/exportResults/{format}"
      operationId: "get__knowledgeGraph_query_executionID_exportResults"
      parameters:
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "format"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/query/{queryID}/status:
    get:
      summary: "GET mwsx/knowledgeGraph/query/{queryID}/status"
      operationId: "get__knowledgeGraph_query_executionID_status"
      parameters:
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/query/{queryId}:
    delete:
      summary: "DELETE mwsx/knowledgeGraph/query/{queryId}"
      operationId: "delete__knowledgeGraph_query_executionID_thread"
      parameters:
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/query/{queryID}/results:
    get:
      summary: "GET mwsx/knowledgeGraph/query/{queryID}/results"
      operationId: "get__knowledgeGraph_query_executionID_results"
      parameters:
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "offset"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/instance/page:
    get:
      summary: "GET mwsx/knowledgeGraph/instance/page"
      operationId: "get__knowledgeGraph_instance_page"
      parameters:
      - name: "instanceIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "kgIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lang"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/instance/objectType:
    get:
      summary: "GET mwsx/knowledgeGraph/instance/objectType"
      operationId: "get__knowledgeGraph_instance_objectType"
      parameters:
      - name: "kgIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "object"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "predicate"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "type"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "page"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "lang"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/instance/subjectType:
    get:
      summary: "GET mwsx/knowledgeGraph/instance/subjectType"
      operationId: "get__knowledgeGraph_instance_subjectType"
      parameters:
      - name: "kgIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "subject"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "predicate"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "type"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "page"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "lang"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/store/file:
    get:
      summary: "GET mwsx/knowledgeGraph/store/file"
      operationId: "get__knowledgeGraph_store_file"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/knowledgeGraph/store/file"
      operationId: "post__knowledgeGraph_store_file"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/store/file/{name}:
    get:
      summary: "GET mwsx/knowledgeGraph/store/file/{name}"
      operationId: "get__knowledgeGraph_store_file"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/knowledgeGraph/store/file/{name}"
      operationId: "delete__knowledgeGraph_store_file"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/upload/file:
    post:
      summary: "POST mwsx/knowledgeGraph/upload/file"
      operationId: "post__knowledgeGraph_upload_file"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/upload/import:
    put:
      summary: "PUT mwsx/knowledgeGraph/upload/import"
      operationId: "put__knowledgeGraph_upload_import"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeGraphFileDestination"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/delete/file:
    delete:
      summary: "DELETE mwsx/knowledgeGraph/delete/file"
      operationId: "delete__knowledgeGraph_delete_file"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/delete/file/triples:
    delete:
      summary: "DELETE mwsx/knowledgeGraph/delete/file/triples"
      operationId: "delete__knowledgeGraph_delete_file_triples"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "namedGraph"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/upload/remove:
    delete:
      summary: "DELETE mwsx/knowledgeGraph/upload/remove"
      operationId: "delete__knowledgeGraph_upload_remove"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/upload/files:
    get:
      summary: "GET mwsx/knowledgeGraph/upload/files"
      operationId: "get__knowledgeGraph_upload_files"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/union/queryOBDA:
    put:
      summary: "PUT mwsx/knowledgeGraph/union/queryOBDA"
      operationId: "put__knowledgeGraph_union_queryOBDA"
      parameters:
      - name: "fileName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "uploadOnly"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "endpointName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeGraphDestinationQueryOBDA"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/upload/file/csv:
    post:
      summary: "POST mwsx/knowledgeGraph/upload/file/csv"
      operationId: "post__knowledgeGraph_upload_file_csv"
      parameters:
      - name: "hasHeadersRow"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "csvSeparator"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "quoteChar"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "escapeChar"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "eolSequence"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/upload/files/csv:
    get:
      summary: "GET mwsx/knowledgeGraph/upload/files/csv"
      operationId: "get__knowledgeGraph_upload_file_csv"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/delete/file/csv/{fileName}:
    delete:
      summary: "DELETE mwsx/knowledgeGraph/delete/file/csv/{fileName}"
      operationId: "delete__knowledgeGraph_upload_file_csv"
      parameters:
      - name: "fileName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/file/csv/{fileName}/preview:
    get:
      summary: "GET mwsx/knowledgeGraph/file/csv/{fileName}/preview"
      operationId: "get__knowledgeGraph_upload_file_csv_preview"
      parameters:
      - name: "fileName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lines"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/upload/import/csv:
    put:
      summary: "PUT mwsx/knowledgeGraph/upload/import/csv"
      operationId: "put__knowledgeGraph_upload_file_csv_import"
      parameters:
      - name: "synchronousMode"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CsvImportInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/upload/import/threads:
    get:
      summary: "GET mwsx/knowledgeGraph/upload/import/threads"
      operationId: "get__knowledgeGraph_upload_file_csv_import"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/knowledgeGraph/upload/import/thread:
    get:
      summary: "GET mwsx/knowledgeGraph/upload/import/thread"
      operationId: "get__knowledgeGraph_upload_file_csv_import_thread"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "fileName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/knowledgeGraph/upload/import/thread"
      operationId: "delete__knowledgeGraph_upload_file_csv_import_thread"
      parameters:
      - name: "iri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoints:
    get:
      summary: "GET mwsx/endpoints"
      operationId: "get_endpoints"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/endpoints"
      operationId: "delete_endpoints"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoints/referencing/owlOntology/{name}/version:
    get:
      summary: "GET mwsx/endpoints/referencing/owlOntology/{name}/version"
      operationId: "get_endpoints_referencing_onto"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoints/referencing/owlOntology/{name}/version/mapping/{ID}:
    get:
      summary: "GET mwsx/endpoints/referencing/owlOntology/{name}/version/mapping/{ID}"
      operationId: "get_endpoints_referencing_onto_mapping"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoints/referencing/datasource/{name}:
    get:
      summary: "GET mwsx/endpoints/referencing/datasource/{name}"
      operationId: "get_endpoints_referencing_datasource"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoints/running:
    get:
      summary: "GET mwsx/endpoints/running"
      operationId: "get_running_endpoints"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}:
    get:
      summary: "GET mwsx/endpoint/{name}"
      operationId: "get_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/endpoint/{name}"
      operationId: "put_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/Endpoint"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/endpoint/{name}"
      operationId: "delete_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint:
    post:
      summary: "POST mwsx/endpoint"
      operationId: "post_endpoint"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Endpoint"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/prefixes:
    get:
      summary: "GET mwsx/endpoint/{name}/prefixes"
      operationId: "get__owlOntology_name_version_mapping_ID_prefixes"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/start:
    put:
      summary: "PUT mwsx/endpoint/{name}/start"
      operationId: "start_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/MastroProperties"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/stop:
    put:
      summary: "PUT mwsx/endpoint/{name}/stop"
      operationId: "stop_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/status:
    get:
      summary: "GET mwsx/endpoint/{name}/status"
      operationId: "get_endpoint_status"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/empties:
    get:
      summary: "GET mwsx/endpoint/{name}/empties"
      operationId: "get_endpoint_empties"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/emptyUnfoldingEntities:
    get:
      summary: "GET mwsx/endpoint/{name}/emptyUnfoldingEntities"
      operationId: "get_endpoint_empty_unfolding_entities"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/highlights/annotations:
    get:
      summary: "GET mwsx/endpoint/{name}/highlights/annotations"
      operationId: "get_endpoint_highlights_annotations"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "classIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/count/{queryId}/stop:
    put:
      summary: "PUT mwsx/endpoint/{name}/query/count/{queryId}/stop"
      operationId: "get_query_count_stop"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/count/{queryId}:
    delete:
      summary: "DELETE mwsx/endpoint/{name}/query/count/{queryId}"
      operationId: "delete_query_count"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/count/{queryId}/result:
    get:
      summary: "GET mwsx/endpoint/{name}/query/count/{queryId}/result"
      operationId: "get_query_count_result"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/check:
    post:
      summary: "POST mwsx/endpoint/{name}/query/check"
      operationId: "check_query_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/quarantinedMappingsByEntity:
    post:
      summary: "POST mwsx/endpoint/{name}/query/quarantinedMappingsByEntity"
      operationId: "check_query_on_endpoint_for_quarantinedMappings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/start:
    post:
      summary: "POST mwsx/endpoint/{name}/query/{queryID}/start"
      operationId: "start_catalog_query_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "expandSparqlTables"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "querySemantics"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "answersBufferSize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "skipSqlEvaluation"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "useReplaceForUrlEncoding"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "filterNullValuesOnIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lang"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "agent"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "unfolderCountThreshold"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/stop:
    put:
      summary: "PUT mwsx/endpoint/{name}/query/{queryID}/stop"
      operationId: "stop_catalog_query_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/exportFile:
    get:
      summary: "GET mwsx/endpoint/{name}/query/{queryID}/exportFile"
      operationId: "export_catalog_query_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "fileName"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/fullSparqlDetails:
    get:
      summary: "GET mwsx/endpoint/{name}/query/{queryID}/fullSparqlDetails"
      operationId: "get_eqldeatils_catalog_query_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/ontologyRewritings:
    get:
      summary: "GET mwsx/endpoint/{name}/query/{queryID}/ontologyRewritings"
      operationId: "get__owlOntology_name_version_query_ID_ontologyRewritings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "pagenumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/viewRewritings:
    get:
      summary: "GET mwsx/endpoint/{name}/query/{queryID}/viewRewritings"
      operationId: "get__owlOntology_name_version_query_ID_viewRewritings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "pagenumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/viewOptimizedRewritings:
    get:
      summary: "GET mwsx/endpoint/{name}/query/{queryID}/viewOptimizedRewritings"
      operationId: "get__owlOntology_name_version_query_ID_viewOptimizedRewritings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "pagenumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/sqlRewritings:
    get:
      summary: "GET mwsx/endpoint/{name}/query/{queryID}/sqlRewritings"
      operationId: "get__owlOntology_name_version_query_ID_sqlRewritings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "pagenumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/sqlDebugRewritings:
    get:
      summary: "GET mwsx/endpoint/{name}/query/{queryID}/sqlDebugRewritings"
      operationId: "get__owlOntology_name_version_query_ID_sqlDebugRewritings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/results:
    get:
      summary: "GET mwsx/endpoint/{name}/query/{queryID}/results"
      operationId: "get__owlOntology_name_version_query_ID_results"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "pagenumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/status:
    get:
      summary: "GET mwsx/endpoint/{name}/query/{queryID}/status"
      operationId: "get__owlOntology_name_version_query_ID_status"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/queryRecordInfos:
    get:
      summary: "GET mwsx/endpoint/{name}/queryRecordInfos"
      operationId: "get__owlOntology_name_version_query_ID_record_infos"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{queryID}/queryRecordInfo:
    get:
      summary: "GET mwsx/endpoint/{name}/query/{queryID}/queryRecordInfo"
      operationId: "get__owlOntology_name_version_query_ID_record_info"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/exportQueryResults:
    post:
      summary: "POST mwsx/endpoint/{name}/query/exportQueryResults"
      operationId: "post__owlOntology_name_version_query_ID_export_results"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/export/direct:
    get:
      summary: "GET mwsx/endpoint/{name}/query/export/direct"
      operationId: "post__owlOntology_name_version_query_ID_export_directcsv"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "exportInfo"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/exportThreads:
    get:
      summary: "GET mwsx/endpoint/{name}/exportThreads"
      operationId: "get__owlOntology_name_version_query_ID_export_threads"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/exported:
    get:
      summary: "GET mwsx/endpoint/{name}/exported"
      operationId: "get__owlOntology_name_version_query_ID_exported"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/exported/{fileName}:
    get:
      summary: "GET mwsx/endpoint/{name}/exported/{fileName}"
      operationId: "get__owlOntology_name_version_query_ID_exported_fileName"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "fileName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/endpoint/{name}/exported/{fileName}"
      operationId: "delete__owlOntology_name_version_query_ID_exported_fileName"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "fileName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/exportThread/{id}/status:
    get:
      summary: "GET mwsx/endpoint/{name}/exportThread/{id}/status"
      operationId: "get__owlOntology_name_version_query_ID_export_thread_id_status"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/exportThread/{id}/errors:
    get:
      summary: "GET mwsx/endpoint/{name}/exportThread/{id}/errors"
      operationId: "get__owlOntology_name_version_query_ID_export_thread_id_errors"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/exportThread/{id}/stop:
    put:
      summary: "PUT mwsx/endpoint/{name}/exportThread/{id}/stop"
      operationId: "put__owlOntology_name_version_query_ID_export_thread_id_status"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/exportThread/{id}/stats:
    get:
      summary: "GET mwsx/endpoint/{name}/exportThread/{id}/stats"
      operationId: "get__owlOntology_name_version_query_ID_export_thread_id_stats"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/exportThread/{id}/file:
    get:
      summary: "GET mwsx/endpoint/{name}/exportThread/{id}/file"
      operationId: "get__owlOntology_name_version_query_ID_export_thread_id_file"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/exportThread/{id}/preview/{lines}:
    get:
      summary: "GET mwsx/endpoint/{name}/exportThread/{id}/preview/{lines}"
      operationId: "get__owlOntology_name_version_query_ID_export_thread_id_preview"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lines"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/exportThread/{id}:
    delete:
      summary: "DELETE mwsx/endpoint/{name}/exportThread/{id}"
      operationId: "delete__owlOntology_name_version_query_ID_export_thread_id"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "id"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/cquery/start:
    post:
      summary: "POST mwsx/endpoint/{name}/cquery/start"
      operationId: "post__owlOntology_name_version_construct_query_start"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "expandSparqlTables"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "querySemantics"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "answersBufferSize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "skipSqlEvaluation"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "useReplaceForUrlEncoding"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "filterNullValuesOnIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lang"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "agent"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "unfolderCountThreshold"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/cquery/{queryID}/start:
    post:
      summary: "POST mwsx/endpoint/{name}/cquery/{queryID}/start"
      operationId: "post__owlOntology_name_version_construct_query_ID_start"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "expandSparqlTables"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "querySemantics"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "answersBufferSize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "skipSqlEvaluation"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "useReplaceForUrlEncoding"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "filterNullValuesOnIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lang"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "agent"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "unfolderCountThreshold"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/cquery/{queryID}/status:
    get:
      summary: "GET mwsx/endpoint/{name}/cquery/{queryID}/status"
      operationId: "get__owlOntology_name_version_construct_query_ID_status"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/cquery/exportQueryResults:
    post:
      summary: "POST mwsx/endpoint/{name}/cquery/exportQueryResults"
      operationId: "post__owlOntology_name_version_cquery_ID_export_results"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/cquery/{queryID}/export:
    get:
      summary: "GET mwsx/endpoint/{name}/cquery/{queryID}/export"
      operationId: "get__owlOntology_name_version_construct_query_ID_export"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/cquery/{queryID}/results:
    get:
      summary: "GET mwsx/endpoint/{name}/cquery/{queryID}/results"
      operationId: "get__owlOntology_name_version_construct_query_ID_results"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "pagenumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/cquery/{queryID}/results/triples:
    get:
      summary: "GET mwsx/endpoint/{name}/cquery/{queryID}/results/triples"
      operationId: "get__owlOntology_name_version_construct_query_ID_results_triples"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "pagenumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/cquery/{queryID}/results/tabular:
    get:
      summary: "GET mwsx/endpoint/{name}/cquery/{queryID}/results/tabular"
      operationId: "get__owlOntology_name_version_construct_query_ID_results_tabular"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "pagenumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/cquery/{queryID}/results/rdfGraph:
    get:
      summary: "GET mwsx/endpoint/{name}/cquery/{queryID}/results/rdfGraph"
      operationId: "get__owlOntology_name_version_construct_query_ID_results_rdf_graph"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "pagenumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/countEntityInstances:
    get:
      summary: "GET mwsx/endpoint/{eName}/countEntityInstances"
      operationId: "get__endpoint_instances"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "classIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "objectPropertyIRI"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/countEntityInstances/start:
    get:
      summary: "GET mwsx/endpoint/{eName}/countEntityInstances/start"
      operationId: "get__start_endpoint_entity_instances"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/countEntityInstances/stop:
    get:
      summary: "GET mwsx/endpoint/{eName}/countEntityInstances/stop"
      operationId: "get__stop_endpoint_entity_instances"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/countEntityInstances/info:
    get:
      summary: "GET mwsx/endpoint/{eName}/countEntityInstances/info"
      operationId: "get__endpoint_entity_instances_info"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/instanceChecking/start:
    post:
      summary: "POST mwsx/endpoint/{eName}/instanceChecking/start"
      operationId: "get__start_endpoint_instance_checking"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "instance"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "filterFathers"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
          default: "true"
      - name: "filterNonMatchingTemplates"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
          default: "true"
      - name: "stopOnFirstMatch"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              items:
                exampleSetFlag: false
                types:
                - "string"
              types:
              - "array"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/instanceChecking/{threadId}/stop:
    get:
      summary: "GET mwsx/endpoint/{eName}/instanceChecking/{threadId}/stop"
      operationId: "get__stop_endpoint_instance_checking"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/instanceChecking/{threadId}/info:
    get:
      summary: "GET mwsx/endpoint/{eName}/instanceChecking/{threadId}/info"
      operationId: "get__endpoint_class_instance_checking"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "threadId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/minMaxDataproperties/start:
    get:
      summary: "GET mwsx/endpoint/{eName}/minMaxDataproperties/start"
      operationId: "get__start_endpoint_min_max_dataproperties"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/minMaxDataproperties/stop:
    get:
      summary: "GET mwsx/endpoint/{eName}/minMaxDataproperties/stop"
      operationId: "get__stop_endpoint_min_max_dataproperties"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/minMaxDataproperties/info:
    get:
      summary: "GET mwsx/endpoint/{eName}/minMaxDataproperties/info"
      operationId: "get__endpoint_min_max_dataproperties"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/queries:
    get:
      summary: "GET mwsx/endpoint/{name}/queries"
      operationId: "list_query_statuses_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "status"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/queries/ids:
    get:
      summary: "GET mwsx/endpoint/{name}/queries/ids"
      operationId: "list_query_ids_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "status"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/{executionId}:
    delete:
      summary: "DELETE mwsx/endpoint/{name}/query/{executionId}"
      operationId: "delete_query_execution_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "executionId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/start:
    post:
      summary: "POST mwsx/endpoint/{name}/query/start"
      operationId: "start_new_query_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "expandSparqlTables"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "querySemantics"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "answersBufferSize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "skipSqlEvaluation"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "useReplaceForUrlEncoding"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "filterNullValuesOnIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lang"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "agent"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "unfolderCountThreshold"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/start-sync:
    post:
      summary: "POST mwsx/endpoint/{name}/query/start-sync"
      operationId: "start_new_sync_query_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "expandSparqlTables"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "querySemantics"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "answersBufferSize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "skipSqlEvaluation"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "useReplaceForUrlEncoding"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "filterNullValuesOnIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lang"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "agent"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "unfolderCountThreshold"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/count:
    post:
      summary: "POST mwsx/endpoint/{name}/query/count"
      operationId: "start_new_query_on_count"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "expandSparqlTables"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "querySemantics"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "agent"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "unfolderCountThreshold"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/count/{queryId}/state:
    get:
      summary: "GET mwsx/endpoint/{name}/query/count/{queryId}/state"
      operationId: "get_query_count_state"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/query/count/{queryId}/error:
    get:
      summary: "GET mwsx/endpoint/{name}/query/count/{queryId}/error"
      operationId: "get_query_count_error"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/new-cq-query/start:
    post:
      summary: "POST mwsx/endpoint/{name}/new-cq-query/start"
      operationId: "start_new_new_cq_query_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "reasoning"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "expandSparqlTables"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      - name: "querySemantics"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "answersBufferSize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "skipSqlEvaluation"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "useReplaceForUrlEncoding"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "filterNullValuesOnIri"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "lang"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/new-cq-query/{executionId}/results:
    get:
      summary: "GET mwsx/endpoint/{name}/new-cq-query/{executionId}/results"
      operationId: "get__owlOntology_name_version_new_cq_query_ID_results"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "executionId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "pagesize"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "pagenumber"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/new-cq-query/{executionId}/status:
    get:
      summary: "GET mwsx/endpoint/{name}/new-cq-query/{executionId}/status"
      operationId: "get__owlOntology_name_version_new_cq_query_ID_status"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "executionId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/new-cq-query/{executionId}/ontologyRewritings:
    get:
      summary: "GET mwsx/endpoint/{name}/new-cq-query/{executionId}/ontologyRewritings"
      operationId: "get__owlOntology_name_version_new_cq_query_ID_ontologyRewritings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "executionId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/new-cq-query/{executionId}/viewRewritings:
    get:
      summary: "GET mwsx/endpoint/{name}/new-cq-query/{executionId}/viewRewritings"
      operationId: "get__owlOntology_name_version_new_cq_query_ID_viewRewritings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "executionId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/new-cq-query/{executionId}/viewOptimizedRewritings:
    get:
      summary: "GET mwsx/endpoint/{name}/new-cq-query/{executionId}/viewOptimizedRewritings"
      operationId: "get__owlOntology_name_version_new_cq_query_ID_viewOptimizedRewritings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "executionId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/new-cq-query/{executionId}/sqlRewritings:
    get:
      summary: "GET mwsx/endpoint/{name}/new-cq-query/{executionId}/sqlRewritings"
      operationId: "get__owlOntology_name_version_new_cq_query_ID_sqlRewritings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "executionId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/new-cq-query/{executionId}/sqlDebugRewritings:
    get:
      summary: "GET mwsx/endpoint/{name}/new-cq-query/{executionId}/sqlDebugRewritings"
      operationId: "get__owlOntology_name_version_new_cq_query_ID_sqlDebugRewritings"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "executionId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/new-cq-query/{executionId}/stop:
    put:
      summary: "PUT mwsx/endpoint/{name}/new-cq-query/{executionId}/stop"
      operationId: "stop_new_cq_query_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "executionId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/new-cq-query/{executionId}:
    delete:
      summary: "DELETE mwsx/endpoint/{name}/new-cq-query/{executionId}"
      operationId: "delete_new_cq_query_on_endpoint"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "executionId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{name}/virtualEntity/{veName}:
    get:
      summary: "GET mwsx/endpoint/{name}/virtualEntity/{veName}"
      operationId: "get__owlOntology_name_version_endpoint_virtuslEntity_results"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "veName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "unfolderCountThreshold"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/mappingAnalysisReport:
    get:
      summary: "GET mwsx/endpoint/{eName}/mappingAnalysisReport"
      operationId: "get__owlOntology_name_version_mapping_ID_analysisReport"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/endpoint/{eName}/saturetedOntology:
    post:
      summary: "POST mwsx/endpoint/{eName}/saturetedOntology"
      operationId: "get__endpoint_ename_saturetedOntology"
      parameters:
      - name: "eName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OntologySaturationParameters"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/queryTags:
    get:
      summary: "GET mwsx/queryTags"
      operationId: "get_queryTags"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/queryTags"
      operationId: "post_queryTags"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tag"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/queryTags/{tagName}:
    delete:
      summary: "DELETE mwsx/queryTags/{tagName}"
      operationId: "delete_queryTags_tagName"
      parameters:
      - name: "tagName"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/querycatalog:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/querycatalog"
      operationId: "get__owlOntology_name_version_querycatalog"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/querycatalog"
      operationId: "delete__owlOntology_name_version_querycatalog"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/querycatalog/converted2sparqling:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/querycatalog/converted2sparqling"
      operationId: "get__owlOntology_name_version_querycatalog_converted2spargling"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/query/{queryID}/publication:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/query/{queryID}/publication"
      operationId: "post__owlOntology_name_version_querycatalog_request_publication"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/querycatalog/publicationRequests:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/querycatalog/publicationRequests"
      operationId: "get__owlOntology_name_version_querycatalog_request_publication"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/querycatalog/{userCatalog}/query/{queryID}/publication:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/querycatalog/{userCatalog}/query/{queryID}/publication"
      operationId: "put__owlOntology_name_version_querycatalog_accept_publication"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "userCatalog"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "accept"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/querycatalog/{userCatalog}/query/{queryID}/publication"
      operationId: "delete__owlOntology_name_version_querycatalog_accept_publication"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "userCatalog"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "queryID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/querycatalog/export:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/querycatalog/export"
      operationId: "get__owlOntology_name_version_querycatalog_export"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/querycatalog/import:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/querycatalog/import"
      operationId: "get__owlOntology_name_version_querycatalog_import"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "additive"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/query/{ID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/query/{ID}"
      operationId: "get__owlOntology_name_version_query_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/query/{ID}"
      operationId: "put__owlOntology_name_version_query_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/query/{ID}"
      operationId: "delete__owlOntology_name_version_query_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/query:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/query"
      operationId: "post__owlOntology_name_version_query_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/queries/sparqling:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/queries/sparqling"
      operationId: "get__owlOntology_name_version_queries_sparqling"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/query/sparqling/{ID}:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/query/sparqling/{ID}"
      operationId: "get__owlOntology_name_version_query_sparqling_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/query/sparqling/{ID}"
      operationId: "put__owlOntology_name_version_query_sparqling_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SparqlingSPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/query/sparqling/{ID}"
      operationId: "delete__owlOntology_name_version_query_sparqling_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/query/sparqling:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/query/sparqling"
      operationId: "post__owlOntology_name_version_query_sparqling_ID"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SparqlingSPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/querycatalog/sparqling/import:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/querycatalog/sparqling/import"
      operationId: "post__owlOntology_name_version_querycatalog_sparqling_import"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "additive"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/querycatalog/sparqling:
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/querycatalog/sparqling"
      operationId: "delete__owlOntology_name_version_querycatalog_sparqling"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/querycatalog/sparqling/export:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/querycatalog/sparqling/export"
      operationId: "get__owlOntology_name_version_querycatalog_sparqling_export"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/querycatalog:
    get:
      summary: "GET mwsx/ontologyCatalog/querycatalog"
      operationId: "get_ontologycatalog_querycatalog"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/ontologyCatalog/querycatalog"
      operationId: "delete_ontologycatalog_querycatalog"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/querycatalog/export:
    get:
      summary: "GET mwsx/ontologyCatalog/querycatalog/export"
      operationId: "get_ontologycatalog_querycatalog_export"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/querycatalog/import:
    post:
      summary: "POST mwsx/ontologyCatalog/querycatalog/import"
      operationId: "get_ontologycatalog_querycatalog_import"
      parameters:
      - name: "additive"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/querycatalog/query/{ID}:
    get:
      summary: "GET mwsx/ontologyCatalog/querycatalog/query/{ID}"
      operationId: "get_ontologycatalog_query_ID"
      parameters:
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/ontologyCatalog/querycatalog/query/{ID}"
      operationId: "put_ontologycatalog_query_ID"
      parameters:
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/ontologyCatalog/querycatalog/query/{ID}"
      operationId: "delete_ontologycatalog_query_ID"
      parameters:
      - name: "ID"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/ontologyCatalog/querycatalog/query:
    post:
      summary: "POST mwsx/ontologyCatalog/querycatalog/query"
      operationId: "post_ontologycatalog_query_ID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SPARQLQuery"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/queries/publicationRequests:
    get:
      summary: "GET mwsx/owlOntology/queries/publicationRequests"
      operationId: "get_query_publication_requests"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/users:
    get:
      summary: "GET mwsx/users"
      operationId: "get__users"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/users"
      operationId: "put__users"
      parameters:
      - name: "op"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/Users"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/user/{username}:
    get:
      summary: "GET mwsx/user/{username}"
      operationId: "get__user_name"
      parameters:
      - name: "username"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/user/{username}"
      operationId: "put__user"
      parameters:
      - name: "username"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "onlyInfo"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/user/{username}"
      operationId: "delete__user"
      parameters:
      - name: "username"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/user:
    post:
      summary: "POST mwsx/user"
      operationId: "post__user"
      parameters:
      - name: "secret"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/user/{username}/passwd:
    put:
      summary: "PUT mwsx/user/{username}/passwd"
      operationId: "put__user_passwd"
      parameters:
      - name: "username"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "secret"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "oldSecret"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/user/{username}/passwd/reset:
    put:
      summary: "PUT mwsx/user/{username}/passwd/reset"
      operationId: "put__user_passwd_reset"
      parameters:
      - name: "username"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "email"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/roles:
    get:
      summary: "GET mwsx/roles"
      operationId: "get__roles"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/role/{rolename}:
    get:
      summary: "GET mwsx/role/{rolename}"
      operationId: "get__role_name"
      parameters:
      - name: "rolename"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/role/{rolename}"
      operationId: "put__role"
      parameters:
      - name: "rolename"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/role/{rolename}"
      operationId: "delete__role"
      parameters:
      - name: "rolename"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/role:
    post:
      summary: "POST mwsx/role"
      operationId: "post__role"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/role/configurations:
    get:
      summary: "GET mwsx/role/configurations"
      operationId: "get__role_configs"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/monolith/roles:
    get:
      summary: "GET mwsx/monolith/roles"
      operationId: "get__monolith__roles"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/monolith/role/{rolename}:
    put:
      summary: "PUT mwsx/monolith/role/{rolename}"
      operationId: "put__monolith__role"
      parameters:
      - name: "rolename"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleMonolith"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/users/feedback:
    get:
      summary: "GET mwsx/users/feedback"
      operationId: "get__users_feedback"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/user/feedback:
    get:
      summary: "GET mwsx/user/feedback"
      operationId: "get__user_feedback"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/user/{username}/feedback:
    delete:
      summary: "DELETE mwsx/user/{username}/feedback"
      operationId: "delete__user_feedback"
      parameters:
      - name: "username"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/user/feedback/comment:
    post:
      summary: "POST mwsx/user/feedback/comment"
      operationId: "post__user_feedback_comment"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserFeedbackComment"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/statistics/accesses:
    get:
      summary: "GET mwsx/statistics/accesses"
      operationId: "get_accesses_statistics"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/statistics/accesses"
      operationId: "put_accesses_statistics"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              items:
                $ref: "#/components/schemas/AccessLog"
                exampleSetFlag: false
              types:
              - "array"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/statistics/accesses"
      operationId: "post_accesses_statistics"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              items:
                $ref: "#/components/schemas/AccessLog"
                exampleSetFlag: false
              types:
              - "array"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/statistics/accesses"
      operationId: "delete_accesses_statistics"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/statistics/ontologies:
    get:
      summary: "GET mwsx/statistics/ontologies"
      operationId: "get_ontologies_statistics"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/statistics/ontologies"
      operationId: "put_ontologies_statistics"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              items:
                $ref: "#/components/schemas/OntologyUsageLog"
                exampleSetFlag: false
              types:
              - "array"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/statistics/ontologies"
      operationId: "post_ontologies_statistics"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              items:
                $ref: "#/components/schemas/OntologyUsageLog"
                exampleSetFlag: false
              types:
              - "array"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/statistics/ontologies"
      operationId: "delete_ontologies_statistics"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/statistics/{endpoint}/queries:
    get:
      summary: "GET mwsx/statistics/{endpoint}/queries"
      operationId: "get_statistics_endpoint_queries"
      parameters:
      - name: "endpoint"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/statistics/{endpoint}/queries"
      operationId: "put_statistics_endpoint_queries"
      parameters:
      - name: "endpoint"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              items:
                $ref: "#/components/schemas/QueryUsageLog"
                exampleSetFlag: false
              types:
              - "array"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/statistics/{endpoint}/queries"
      operationId: "post_statistics_endpoint_queries"
      parameters:
      - name: "endpoint"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              items:
                $ref: "#/components/schemas/QueryUsageLog"
                exampleSetFlag: false
              types:
              - "array"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/statistics/{endpoint}/queries"
      operationId: "delete_statistics_endpoint_queries"
      parameters:
      - name: "endpoint"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/statistics/{endpoint}/entities:
    get:
      summary: "GET mwsx/statistics/{endpoint}/entities"
      operationId: "get_statistics_endpoint_entities"
      parameters:
      - name: "endpoint"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "timestampStart"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
      - name: "timestampEnd"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/vkg/catalog:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/vkg/catalog"
      operationId: "get_vkg_snapshots"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/vkg/catalog"
      operationId: "post_vkg_snapshot"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VKGSnapshot"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/vkg/catalog"
      operationId: "delete_vkg_snapshots"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/vkg/catalog/{snapshotId}:
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/vkg/catalog/{snapshotId}"
      operationId: "put_vkg_snapshot"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "snapshotId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VKGSnapshot"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/vkg/catalog/{snapshotId}"
      operationId: "delete_vkg_snapshot"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "snapshotId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/vkg/catalog/export:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/vkg/catalog/export"
      operationId: "export_vkg_snapshots"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/vkg/catalog/import:
    post:
      summary: "POST mwsx/owlOntology/{name}/version/vkg/catalog/import"
      operationId: "import_vkg_snapshot"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "additive"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "boolean"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileInfo"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/owlOntology/{name}/version/vkg/node-rendering:
    get:
      summary: "GET mwsx/owlOntology/{name}/version/vkg/node-rendering"
      operationId: "get_default_node_rendering"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/owlOntology/{name}/version/vkg/node-rendering"
      operationId: "put_default_node_rendering"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/owlOntology/{name}/version/vkg/node-rendering"
      operationId: "post_default_node_rendering"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    delete:
      summary: "DELETE mwsx/owlOntology/{name}/version/vkg/node-rendering"
      operationId: "delete_vkg_node_rendering"
      parameters:
      - name: "name"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "version"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/taskScheduler/state:
    get:
      summary: "GET mwsx/taskScheduler/state"
      operationId: "get__task_scheduler_state"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    put:
      summary: "PUT mwsx/taskScheduler/state"
      operationId: "put__task_scheduler_state"
      parameters:
      - name: "action"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/taskScheduler/jobs:
    get:
      summary: "GET mwsx/taskScheduler/jobs"
      operationId: "get__task_scheduler_jobs"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
    post:
      summary: "POST mwsx/taskScheduler/jobs"
      operationId: "post__task_scheduler_jobs"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MwsxTaskSchedulerJobData"
              exampleSetFlag: false
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/taskScheduler/jobs/available:
    get:
      summary: "GET mwsx/taskScheduler/jobs/available"
      operationId: "get__task_scheduler_jobs_available"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/taskScheduler/jobs/entries:
    get:
      summary: "GET mwsx/taskScheduler/jobs/entries"
      operationId: "get__task_scheduler_job_entries"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/taskScheduler/jobs/entries/filter:
    post:
      summary: "POST mwsx/taskScheduler/jobs/entries/filter"
      operationId: "post__task_scheduler_job_entries"
      parameters:
      - name: "mode"
        in: "query"
        required: true
        style: "FORM"
        explode: true
        schema:
          exampleSetFlag: false
          types:
          - "string"
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              types:
              - "string"
            exampleSetFlag: false
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/taskScheduler/job/{jobId}/entry:
    get:
      summary: "GET mwsx/taskScheduler/job/{jobId}/entry"
      operationId: "get__task_scheduler_job_entries"
      parameters:
      - name: "jobId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/taskScheduler/job/{jobId}/execution/{execId}:
    get:
      summary: "GET mwsx/taskScheduler/job/{jobId}/execution/{execId}"
      operationId: "get__task_scheduler_job_entries_execution_id"
      parameters:
      - name: "jobId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      - name: "execId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/taskScheduler/job/{jobId}/execution/entries:
    get:
      summary: "GET mwsx/taskScheduler/job/{jobId}/execution/entries"
      operationId: "get__task_scheduler_job_execution_entries"
      parameters:
      - name: "jobId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/taskScheduler/job/{jobId}:
    delete:
      summary: "DELETE mwsx/taskScheduler/job/{jobId}"
      operationId: "delete__task_scheduler_job_entries"
      parameters:
      - name: "jobId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
  /mwsx/taskScheduler/job/{jobId}/executionsIds:
    get:
      summary: "GET mwsx/taskScheduler/job/{jobId}/executionsIds"
      operationId: "get__task_scheduler_job_entries_executions_ids"
      parameters:
      - name: "jobId"
        in: "path"
        required: true
        style: "SIMPLE"
        explode: false
        schema:
          exampleSetFlag: false
          types:
          - "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
                exampleSetFlag: false
              exampleSetFlag: false
components:
  schemas:
    Response:
      properties: {}
      exampleSetFlag: false
      types:
      - "object"
    AuthorizationViewProfile:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        classes:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        objectProperties:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        dataProperties:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    AuthorizationViewProfileInfo:
      properties:
        profile:
          $ref: "#/components/schemas/AuthorizationViewProfile"
          exampleSetFlag: false
        description:
          exampleSetFlag: false
          types:
          - "string"
        ontologyName:
          exampleSetFlag: false
          types:
          - "string"
        ontologyVersion:
          exampleSetFlag: false
          types:
          - "string"
        mappingId:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    Position:
      properties:
        x:
          format: "float"
          exampleSetFlag: false
          types:
          - "number"
        "y":
          format: "float"
          exampleSetFlag: false
          types:
          - "number"
      exampleSetFlag: false
      types:
      - "object"
    Node:
      properties:
        position:
          $ref: "#/components/schemas/Position"
          exampleSetFlag: false
        labelPosition:
          $ref: "#/components/schemas/Position"
          exampleSetFlag: false
        id:
          exampleSetFlag: false
          types:
          - "string"
        originalId:
          exampleSetFlag: false
          types:
          - "string"
        diagramId:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        displayedName:
          exampleSetFlag: false
          types:
          - "string"
        iri:
          exampleSetFlag: false
          types:
          - "string"
        type:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "CLASS"
          - "OBJECT_PROPERTY"
          - "DATA_PROPERTY"
          - "ANNOTATION_PROPERTY"
          - "INDIVIDUAL"
          - "CLASS_INSTANCE"
          - "DOMAIN_RESTRICTION"
          - "RANGE_RESTRICTION"
          - "UNION"
          - "COMPLETE_UNION"
          - "DISJOINT_UNION"
          - "COMPLETE_DISJOINT_UNION"
          - "COMPLEMENT"
          - "INTERSECTION"
          - "ENUMERATION"
          - "HAS_KEY"
          - "ROLE_INVERSE"
          - "ROLE_CHAIN"
          - "DATATYPE_RESTRICTION"
          - "VALUE_DOMAIN"
          - "PROPERTY_ASSERTION"
          - "LITERAL"
          - "FACET"
          - "NEUTRAL"
          - "VALUE"
          - "INCLUSION"
          - "EQUIVALENCE"
          - "INSTANCE_OF"
          - "INPUT"
          - "SAME"
          - "DIFFERENT"
          - "MEMBERSHIP"
          - "ATTRIBUTE_EDGE"
          - "IRI"
      exampleSetFlag: false
      types:
      - "object"
    Edge:
      properties:
        sourceId:
          exampleSetFlag: false
          types:
          - "string"
        targetId:
          exampleSetFlag: false
          types:
          - "string"
        breakpoints:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Position"
            exampleSetFlag: false
          types:
          - "array"
        domainTyped:
          exampleSetFlag: false
          types:
          - "boolean"
        rangeTyped:
          exampleSetFlag: false
          types:
          - "boolean"
        domainMandatory:
          exampleSetFlag: false
          types:
          - "boolean"
        rangeMandatory:
          exampleSetFlag: false
          types:
          - "boolean"
        id:
          exampleSetFlag: false
          types:
          - "string"
        originalId:
          exampleSetFlag: false
          types:
          - "string"
        diagramId:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        displayedName:
          exampleSetFlag: false
          types:
          - "string"
        iri:
          exampleSetFlag: false
          types:
          - "string"
        type:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "CLASS"
          - "OBJECT_PROPERTY"
          - "DATA_PROPERTY"
          - "ANNOTATION_PROPERTY"
          - "INDIVIDUAL"
          - "CLASS_INSTANCE"
          - "DOMAIN_RESTRICTION"
          - "RANGE_RESTRICTION"
          - "UNION"
          - "COMPLETE_UNION"
          - "DISJOINT_UNION"
          - "COMPLETE_DISJOINT_UNION"
          - "COMPLEMENT"
          - "INTERSECTION"
          - "ENUMERATION"
          - "HAS_KEY"
          - "ROLE_INVERSE"
          - "ROLE_CHAIN"
          - "DATATYPE_RESTRICTION"
          - "VALUE_DOMAIN"
          - "PROPERTY_ASSERTION"
          - "LITERAL"
          - "FACET"
          - "NEUTRAL"
          - "VALUE"
          - "INCLUSION"
          - "EQUIVALENCE"
          - "INSTANCE_OF"
          - "INPUT"
          - "SAME"
          - "DIFFERENT"
          - "MEMBERSHIP"
          - "ATTRIBUTE_EDGE"
          - "IRI"
      exampleSetFlag: false
      types:
      - "object"
    Viewport:
      properties:
        pan:
          $ref: "#/components/schemas/Position"
          exampleSetFlag: false
        zoom:
          format: "float"
          exampleSetFlag: false
          types:
          - "number"
      exampleSetFlag: false
      types:
      - "object"
    Diagram:
      properties:
        id:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        name:
          exampleSetFlag: false
          types:
          - "string"
        nodes:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Node"
            exampleSetFlag: false
          types:
          - "array"
        edges:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Edge"
            exampleSetFlag: false
          types:
          - "array"
        lastViewportState:
          $ref: "#/components/schemas/Viewport"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    Annotation:
      properties:
        lexicalForm:
          exampleSetFlag: false
          types:
          - "string"
        value:
          exampleSetFlag: false
          types:
          - "string"
        hasIriValue:
          exampleSetFlag: false
          types:
          - "boolean"
        property:
          exampleSetFlag: false
          types:
          - "string"
        language:
          exampleSetFlag: false
          types:
          - "string"
        datatype:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    Entity:
      properties:
        fullIri:
          exampleSetFlag: false
          types:
          - "string"
        annotations:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Annotation"
            exampleSetFlag: false
          types:
          - "array"
        datatype:
          exampleSetFlag: false
          types:
          - "string"
        isDataPropertyFunctional:
          exampleSetFlag: false
          types:
          - "boolean"
        functionProperties:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
            enum:
            - "FUNCTIONAL"
            - "INVERSEFUNCTIONAL"
            - "TRANSITIVE"
            - "SYMMETRIC"
            - "ASYMMETRIC"
            - "REFLEXIVE"
            - "IRREFLEXIVE"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    DataPropertyValue:
      properties:
        value:
          exampleSetFlag: false
          types:
          - "string"
        iri:
          exampleSetFlag: false
          types:
          - "string"
        language:
          exampleSetFlag: false
          types:
          - "string"
        datatype:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    ClassInstanceEntity:
      properties:
        parentClasses:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        dataProperties:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/DataPropertyValue"
            exampleSetFlag: false
          types:
          - "array"
        shortIri:
          exampleSetFlag: false
          types:
          - "string"
        fullIri:
          exampleSetFlag: false
          types:
          - "string"
        annotations:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Annotation"
            exampleSetFlag: false
          types:
          - "array"
        datatype:
          exampleSetFlag: false
          types:
          - "string"
        isDataPropertyFunctional:
          exampleSetFlag: false
          types:
          - "boolean"
        functionProperties:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
            enum:
            - "FUNCTIONAL"
            - "INVERSEFUNCTIONAL"
            - "TRANSITIVE"
            - "SYMMETRIC"
            - "ASYMMETRIC"
            - "REFLEXIVE"
            - "IRREFLEXIVE"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    Namespace:
      properties:
        value:
          exampleSetFlag: false
          types:
          - "string"
        prefixes:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    RDFGraphMetadata:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        iri:
          exampleSetFlag: false
          types:
          - "string"
        version:
          exampleSetFlag: false
          types:
          - "string"
        languages:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        defaultLanguage:
          exampleSetFlag: false
          types:
          - "string"
        namespaces:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Namespace"
            exampleSetFlag: false
          types:
          - "array"
        annotations:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Annotation"
            exampleSetFlag: false
          types:
          - "array"
        annotationProperties:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    Object:
      properties: {}
      exampleSetFlag: false
      types:
      - "object"
    Theme:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        name:
          exampleSetFlag: false
          types:
          - "string"
        colours:
          $ref: "#/components/schemas/Object"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    RDFGraphConfig:
      properties:
        themes:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Theme"
            exampleSetFlag: false
          types:
          - "array"
        selectedTheme:
          exampleSetFlag: false
          types:
          - "string"
        language:
          exampleSetFlag: false
          types:
          - "string"
        entityNameType:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "LABEL"
          - "PREFIXED_IRI"
          - "FULL_IRI"
        renderers:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        widgets:
          $ref: "#/components/schemas/Object"
          exampleSetFlag: false
        filters:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
            enum:
            - "ALL"
            - "DATA_PROPERTY"
            - "VALUE_DOMAIN"
            - "INDIVIDUAL"
            - "UNIVERSAL_QUANTIFIER"
            - "COMPLEMENT"
            - "HAS_KEY"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    HierarchySuperclasses:
      properties:
        classEntity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        complete:
          exampleSetFlag: false
          types:
          - "boolean"
      exampleSetFlag: false
      types:
      - "object"
    Hierarchy:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        type:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "CLASS"
          - "OBJECT_PROPERTY"
          - "DATA_PROPERTY"
          - "ANNOTATION_PROPERTY"
          - "INDIVIDUAL"
          - "CLASS_INSTANCE"
          - "DOMAIN_RESTRICTION"
          - "RANGE_RESTRICTION"
          - "UNION"
          - "COMPLETE_UNION"
          - "DISJOINT_UNION"
          - "COMPLETE_DISJOINT_UNION"
          - "COMPLEMENT"
          - "INTERSECTION"
          - "ENUMERATION"
          - "HAS_KEY"
          - "ROLE_INVERSE"
          - "ROLE_CHAIN"
          - "DATATYPE_RESTRICTION"
          - "VALUE_DOMAIN"
          - "PROPERTY_ASSERTION"
          - "LITERAL"
          - "FACET"
          - "NEUTRAL"
          - "VALUE"
          - "INCLUSION"
          - "EQUIVALENCE"
          - "INSTANCE_OF"
          - "INPUT"
          - "SAME"
          - "DIFFERENT"
          - "MEMBERSHIP"
          - "ATTRIBUTE_EDGE"
          - "IRI"
        inputs:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        superclasses:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/HierarchySuperclasses"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    ActionInvolvedElements:
      properties:
        nodes:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Node"
            exampleSetFlag: false
          types:
          - "array"
        edges:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Edge"
            exampleSetFlag: false
          types:
          - "array"
        Hierarchies:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Hierarchy"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    ActionUser:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        firstName:
          exampleSetFlag: false
          types:
          - "string"
        lastName:
          exampleSetFlag: false
          types:
          - "string"
        email:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    BigDecimal:
      properties: {}
      exampleSetFlag: false
      types:
      - "object"
    Action:
      properties:
        operationType:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "ADD"
          - "EDIT"
          - "REMOVE"
        subject:
          $ref: "#/components/schemas/Object"
          exampleSetFlag: false
        previousState:
          $ref: "#/components/schemas/Object"
          exampleSetFlag: false
        involvedElements:
          $ref: "#/components/schemas/ActionInvolvedElements"
          exampleSetFlag: false
        subactions:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Action"
            exampleSetFlag: false
          types:
          - "array"
        user:
          $ref: "#/components/schemas/ActionUser"
          exampleSetFlag: false
        timestamp:
          $ref: "#/components/schemas/BigDecimal"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    RDFGraph:
      properties:
        diagrams:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Diagram"
            exampleSetFlag: false
          types:
          - "array"
        entities:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        classInstanceEntities:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/ClassInstanceEntity"
            exampleSetFlag: false
          types:
          - "array"
        metadata:
          $ref: "#/components/schemas/RDFGraphMetadata"
          exampleSetFlag: false
        config:
          $ref: "#/components/schemas/RDFGraphConfig"
          exampleSetFlag: false
        selectedDiagramId:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        creator:
          exampleSetFlag: false
          types:
          - "string"
        modelType:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "ONTOLOGY"
          - "VKG"
          - "RDF"
        actions:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Action"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    FileInfo:
      properties:
        fileName:
          exampleSetFlag: false
          types:
          - "string"
        fileType:
          exampleSetFlag: false
          types:
          - "string"
        content:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    DataQualityCheck:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        priority:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      exampleSetFlag: false
      types:
      - "object"
    DataQualityCheckSet:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        ontologyConstraints:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/DataQualityCheck"
            exampleSetFlag: false
          types:
          - "array"
        user:
          exampleSetFlag: false
          types:
          - "string"
        mappingParameters:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    Label:
      properties:
        lang:
          exampleSetFlag: false
          types:
          - "string"
        content:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    DisjointClasses:
      properties:
        disjointClass:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        id:
          exampleSetFlag: false
          types:
          - "string"
        entity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    FunctionalPropertyAssertion:
      properties:
        direct:
          exampleSetFlag: false
          types:
          - "boolean"
        id:
          exampleSetFlag: false
          types:
          - "string"
        entity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    IdentificationPathElement:
      properties:
        entity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        inverse:
          exampleSetFlag: false
          types:
          - "boolean"
      exampleSetFlag: false
      types:
      - "object"
    IdentificationPath:
      properties:
        path:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/IdentificationPathElement"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    IdentificationAssertion:
      properties:
        identificationPaths:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/IdentificationPath"
            exampleSetFlag: false
          types:
          - "array"
        id:
          exampleSetFlag: false
          types:
          - "string"
        entity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    MandatoryParticipationAssertion:
      properties:
        property:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        direct:
          exampleSetFlag: false
          types:
          - "boolean"
        filler:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        id:
          exampleSetFlag: false
          types:
          - "string"
        entity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    SubClassWithCardinalityAssertion:
      properties:
        property:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        direct:
          exampleSetFlag: false
          types:
          - "boolean"
        filler:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        cardinality:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        cardinalityType:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        id:
          exampleSetFlag: false
          types:
          - "string"
        entity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    HasKeyAssertion:
      properties:
        objectProperties:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        direct:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "boolean"
          types:
          - "array"
        dataProperties:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        id:
          exampleSetFlag: false
          types:
          - "string"
        entity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    SubClassWithForAllAssertion:
      properties:
        property:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        direct:
          exampleSetFlag: false
          types:
          - "boolean"
        filler:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        id:
          exampleSetFlag: false
          types:
          - "string"
        entity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    OntologyConstraints:
      properties:
        disjointnesses:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/DisjointClasses"
            exampleSetFlag: false
          types:
          - "array"
        functionalities:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/FunctionalPropertyAssertion"
            exampleSetFlag: false
          types:
          - "array"
        identifications:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/IdentificationAssertion"
            exampleSetFlag: false
          types:
          - "array"
        mandatories:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/MandatoryParticipationAssertion"
            exampleSetFlag: false
          types:
          - "array"
        cardinalities:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/SubClassWithCardinalityAssertion"
            exampleSetFlag: false
          types:
          - "array"
        keys:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/HasKeyAssertion"
            exampleSetFlag: false
          types:
          - "array"
        universals:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/SubClassWithForAllAssertion"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    DataQualityCheckSetDump:
      properties:
        set:
          $ref: "#/components/schemas/DataQualityCheckSet"
          exampleSetFlag: false
        constraints:
          $ref: "#/components/schemas/OntologyConstraints"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    VarOrConstant:
      properties:
        type:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "VAR"
          - "CONSTANT"
          - "IRI"
        value:
          exampleSetFlag: false
          types:
          - "string"
        constantType:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "STRING"
          - "DECIMAL"
          - "DATETIME"
      exampleSetFlag: false
      types:
      - "object"
    Function:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "ADD"
          - "SUBCTRACT"
          - "MULTIPLY"
          - "DIVIDE"
          - "SUBSTR"
          - "UCASE"
          - "LCASE"
          - "CONTAINS"
          - "CONCAT"
          - "ROUND"
          - "CEIL"
          - "FLOOR"
          - "YEAR"
          - "MONTH"
          - "DAY"
          - "HOURS"
          - "MINUTES"
          - "SECONDS"
          - "STRLEN"
          - "STRSTARTS"
          - "STRENDS"
          - "STRBEFORE"
          - "STRAFTER"
        parameters:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/VarOrConstant"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    GroupByElement:
      properties:
        distinct:
          exampleSetFlag: false
          types:
          - "boolean"
        aggregateFunction:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "COUNT"
          - "SUM"
          - "MIN"
          - "MAX"
          - "AVERAGE"
      exampleSetFlag: false
      types:
      - "object"
    FilterExpression:
      properties:
        operator:
          exampleSetFlag: false
          types:
          - "string"
          enum:
          - "EQUAL"
          - "NOT_EQUAL"
          - "LESS_THAN"
          - "GREATER_THAN"
          - "LESS_THAN_OR_EQUAL_TO"
          - "GREATER_THAN_OR_EQUAL_TO"
          - "IN"
          - "NOT_IN"
          - "REGEX"
          - "ISBLANK"
          - "NOT_ISBLANK"
        parameters:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/VarOrConstant"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    Filter:
      properties:
        expression:
          $ref: "#/components/schemas/FilterExpression"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    HeadElement:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        graphElementId:
          exampleSetFlag: false
          types:
          - "string"
        var:
          exampleSetFlag: false
          types:
          - "string"
        alias:
          exampleSetFlag: false
          types:
          - "string"
        ordering:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        function:
          $ref: "#/components/schemas/Function"
          exampleSetFlag: false
        groupBy:
          $ref: "#/components/schemas/GroupByElement"
          exampleSetFlag: false
        having:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Filter"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    GraphElement:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        variables:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        entities:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        children:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/GraphElement"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    Optional:
      properties:
        id:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        graphIds:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    QueryGraph:
      properties:
        distinct:
          exampleSetFlag: false
          types:
          - "boolean"
        count_star:
          exampleSetFlag: false
          types:
          - "boolean"
        head:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/HeadElement"
            exampleSetFlag: false
          types:
          - "array"
        graph:
          $ref: "#/components/schemas/GraphElement"
          exampleSetFlag: false
        activeGraphElementId:
          exampleSetFlag: false
          types:
          - "string"
        filters:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Filter"
            exampleSetFlag: false
          types:
          - "array"
        optionals:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Optional"
            exampleSetFlag: false
          types:
          - "array"
        limit:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        offset:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        sparql:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    OntologyPath:
      properties:
        entities:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    AddPathToQueryGraphRequest:
      properties:
        queryGraph:
          $ref: "#/components/schemas/QueryGraph"
          exampleSetFlag: false
        ontologyPath:
          $ref: "#/components/schemas/OntologyPath"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    OBDATriplificationRequest:
      properties:
        ontologyName:
          exampleSetFlag: false
          types:
          - "string"
        ontologyVersion:
          exampleSetFlag: false
          types:
          - "string"
        mappingID:
          exampleSetFlag: false
          types:
          - "string"
        outputRdfFormat:
          exampleSetFlag: false
          types:
          - "string"
        dataSource:
          exampleSetFlag: false
          types:
          - "string"
        mappingIdFilter:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        entityIriFilter:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    TemplateRefactoring:
      properties:
        oldTemplate:
          exampleSetFlag: false
          types:
          - "string"
        newTemplate:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    IRI:
      properties:
        shortIRI:
          exampleSetFlag: false
          types:
          - "string"
        extendedIRI:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    SQLView:
      properties:
        sqlViewHead:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        sqlViewID:
          exampleSetFlag: false
          types:
          - "string"
        sqlViewDescription:
          exampleSetFlag: false
          types:
          - "string"
        sqlViewCode:
          exampleSetFlag: false
          types:
          - "string"
        quarantineReasons:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    MappingAtom:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        terms:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        view:
          $ref: "#/components/schemas/SQLView"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    MappingBody:
      properties:
        viewAtoms:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/MappingAtom"
            exampleSetFlag: false
          types:
          - "array"
        bip:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/MappingAtom"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    MappingTemplate:
      properties:
        template:
          exampleSetFlag: false
          types:
          - "string"
        terms:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    ExtensionalAnnotationMapping:
      properties:
        annotationProperty:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        template:
          $ref: "#/components/schemas/MappingTemplate"
          exampleSetFlag: false
        subjectTemplate:
          $ref: "#/components/schemas/MappingTemplate"
          exampleSetFlag: false
        lang:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    MappingAssertion:
      properties:
        currentEntity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        iri:
          $ref: "#/components/schemas/IRI"
          exampleSetFlag: false
        mappingDescription:
          exampleSetFlag: false
          types:
          - "string"
        id:
          exampleSetFlag: false
          types:
          - "string"
        mappingBody:
          $ref: "#/components/schemas/MappingBody"
          exampleSetFlag: false
        template:
          $ref: "#/components/schemas/MappingTemplate"
          exampleSetFlag: false
        rangeTemplate:
          $ref: "#/components/schemas/MappingTemplate"
          exampleSetFlag: false
        quarantineReasons:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        userQuery:
          exampleSetFlag: false
          types:
          - "string"
        annotationMappings:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/ExtensionalAnnotationMapping"
            exampleSetFlag: false
          types:
          - "array"
        rangeLanguageTag:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    ViewRefactoring:
      properties:
        viewName:
          exampleSetFlag: false
          types:
          - "string"
        newSqlBody:
          exampleSetFlag: false
          types:
          - "string"
        newDescription:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    MappingViewAtomRefactoring:
      properties:
        viewName:
          exampleSetFlag: false
          types:
          - "string"
        oldSignature:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        newSignature:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        newSqlBody:
          exampleSetFlag: false
          types:
          - "string"
        newDescription:
          exampleSetFlag: false
          types:
          - "string"
        removedTerms:
          exampleSetFlag: false
          types:
          - "string"
        keptTerms:
          exampleSetFlag: false
          types:
          - "string"
        addedTerms:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    MappingViewAtomRefactoringList:
      properties:
        refactoring:
          $ref: "#/components/schemas/MappingViewAtomRefactoring"
          exampleSetFlag: false
        mappingIds:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        keyIds:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        inclusionIds:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        denialIds:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    IntensionalAnnotationMappingAssertion:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        mappingDescription:
          exampleSetFlag: false
          types:
          - "string"
        annotationProperty:
          exampleSetFlag: false
          types:
          - "string"
        annotationSubjectIRI:
          exampleSetFlag: false
          types:
          - "string"
        annotationValueContent:
          exampleSetFlag: false
          types:
          - "string"
        annotationValueLang:
          exampleSetFlag: false
          types:
          - "string"
        mappingBody:
          $ref: "#/components/schemas/MappingBody"
          exampleSetFlag: false
        userQuery:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    AnnotationProcessorConfig:
      properties:
        format:
          exampleSetFlag: false
          types:
          - "string"
        annotations:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        datasource:
          exampleSetFlag: false
          types:
          - "string"
        ontologyIri:
          exampleSetFlag: false
          types:
          - "string"
        ontologyVersion:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    InclusionView:
      properties:
        sqlViewID:
          exampleSetFlag: false
          types:
          - "string"
        termList:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    InclusionPair:
      properties:
        leftHandTerm:
          exampleSetFlag: false
          types:
          - "string"
        rightHandTerm:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    InclusionDependency:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
        includedView:
          $ref: "#/components/schemas/InclusionView"
          exampleSetFlag: false
        includingView:
          $ref: "#/components/schemas/InclusionView"
          exampleSetFlag: false
        inclusionMap:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/InclusionPair"
            exampleSetFlag: false
          types:
          - "array"
        quarantineReasons:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    KeyDependency:
      properties:
        keyHead:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        sqlViewID:
          exampleSetFlag: false
          types:
          - "string"
        id:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
        quarantineReasons:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    DenialConstraint:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
        constraint:
          $ref: "#/components/schemas/MappingBody"
          exampleSetFlag: false
        quarantineReasons:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        userQuery:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    MappingParameter:
      properties:
        paramName:
          exampleSetFlag: false
          types:
          - "string"
        paramDefaultValue:
          exampleSetFlag: false
          types:
          - "string"
        paramHint:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    IDashboardCardSettings:
      properties: {}
      exampleSetFlag: false
      types:
      - "object"
    DashboardCard:
      properties:
        id:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        title:
          exampleSetFlag: false
          types:
          - "string"
        x:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        "y":
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        height:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        width:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        backgroundColor:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
        settings:
          $ref: "#/components/schemas/IDashboardCardSettings"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    DashboardTab:
      properties:
        title:
          exampleSetFlag: false
          types:
          - "string"
        cards:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/DashboardCard"
            exampleSetFlag: false
          types:
          - "array"
        compactType:
          exampleSetFlag: false
          types:
          - "string"
        queryParametersValues:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    Dashboard:
      properties:
        title:
          exampleSetFlag: false
          types:
          - "string"
        id:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
        tabs:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/DashboardTab"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    Permission:
      properties:
        domain:
          exampleSetFlag: false
          types:
          - "string"
        action:
          exampleSetFlag: false
          types:
          - "string"
        id:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    Role:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        permissions:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Permission"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    User:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        firstName:
          exampleSetFlag: false
          types:
          - "string"
        lastName:
          exampleSetFlag: false
          types:
          - "string"
        email:
          exampleSetFlag: false
          types:
          - "string"
        roles:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Role"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    OntologyCatalog:
      properties:
        ontologyClasses:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        ontologyObjectProperties:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        ontologyDataProperties:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        ontologyIndividuals:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    DiagramNode:
      properties:
        nodeID:
          exampleSetFlag: false
          types:
          - "string"
        diagramName:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    IndividualInfo:
      properties:
        currentEntity:
          $ref: "#/components/schemas/Entity"
          exampleSetFlag: false
        iri:
          $ref: "#/components/schemas/IRI"
          exampleSetFlag: false
        entityDiagrams:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/DiagramNode"
            exampleSetFlag: false
          types:
          - "array"
        individualDescriptions:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Label"
            exampleSetFlag: false
          types:
          - "array"
        sameIndividuals:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        differentIndividuals:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        individualTypes:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    IndividualInfos:
      properties:
        individualInfos:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/IndividualInfo"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    OntologyVersion:
      properties:
        ontologyID:
          exampleSetFlag: false
          types:
          - "string"
        versionID:
          exampleSetFlag: false
          types:
          - "string"
        ontologyIRI:
          exampleSetFlag: false
          types:
          - "string"
        versionDescription:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Label"
            exampleSetFlag: false
          types:
          - "array"
        versionDate:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        numClasses:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        numObjectProperties:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        numDataProperties:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        numAxioms:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        numIndividuals:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        versionOwner:
          $ref: "#/components/schemas/User"
          exampleSetFlag: false
        catalog:
          $ref: "#/components/schemas/OntologyCatalog"
          exampleSetFlag: false
        individualInfos:
          $ref: "#/components/schemas/IndividualInfos"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    Ontology:
      properties:
        ontologyID:
          exampleSetFlag: false
          types:
          - "string"
        ontologyDescription:
          exampleSetFlag: false
          types:
          - "string"
        ontologyVersions:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/OntologyVersion"
            exampleSetFlag: false
          types:
          - "array"
        ontologyOwner:
          $ref: "#/components/schemas/User"
          exampleSetFlag: false
        ontologyDate:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
      exampleSetFlag: false
      types:
      - "object"
    MetadataSubject:
      properties:
        iri:
          exampleSetFlag: false
          types:
          - "string"
        impliedClassIri:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    MetadataPredicate:
      properties:
        iri:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    MetadataObject:
      properties:
        iri:
          exampleSetFlag: false
          types:
          - "string"
        impliedClassIri:
          exampleSetFlag: false
          types:
          - "string"
        value:
          exampleSetFlag: false
          types:
          - "string"
        lang:
          exampleSetFlag: false
          types:
          - "string"
        datatypeIri:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    MetadataTriple:
      properties:
        subject:
          $ref: "#/components/schemas/MetadataSubject"
          exampleSetFlag: false
        predicate:
          $ref: "#/components/schemas/MetadataPredicate"
          exampleSetFlag: false
        object:
          $ref: "#/components/schemas/MetadataObject"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    OntologyCatalogOntologyMetadataSet:
      properties:
        metadataTriples:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/MetadataTriple"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    OntologyCatalogEntry:
      properties:
        ontologyName:
          exampleSetFlag: false
          types:
          - "string"
        ontologyVersion:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    OntologyCatalogQuery:
      properties:
        queryCode:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    GeneratorRequest:
      properties:
        prompt:
          exampleSetFlag: false
          types:
          - "string"
        serviceUrl:
          exampleSetFlag: false
          types:
          - "string"
        accessToken:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    IssueReportRequest:
      properties:
        ontologyName:
          exampleSetFlag: false
          types:
          - "string"
        ontologyVersion:
          exampleSetFlag: false
          types:
          - "string"
        mappingId:
          exampleSetFlag: false
          types:
          - "string"
        datasourceName:
          exampleSetFlag: false
          types:
          - "string"
        endpointName:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
        errorMessage:
          exampleSetFlag: false
          types:
          - "string"
        error:
          exampleSetFlag: false
          types:
          - "string"
        httpRoute:
          exampleSetFlag: false
          types:
          - "string"
        httpMethod:
          exampleSetFlag: false
          types:
          - "string"
        queryExecutionId:
          exampleSetFlag: false
          types:
          - "string"
        monolithVersion:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    VirtualEntityField:
      properties:
        fieldName:
          exampleSetFlag: false
          types:
          - "string"
        fieldType:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    VirtualEntity:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
        signature:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/VirtualEntityField"
            exampleSetFlag: false
          types:
          - "array"
        sparqlCode:
          exampleSetFlag: false
          types:
          - "string"
        semantics:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    Tag:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        color:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    VirtualEntityQueryInfos:
      properties:
        virtualEntityname:
          exampleSetFlag: false
          types:
          - "string"
        idSelection:
          exampleSetFlag: false
          types:
          - "string"
        fieldFilters:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    ChartConfiguration:
      properties:
        chartType:
          exampleSetFlag: false
          types:
          - "string"
        series:
          exampleSetFlag: false
          types:
          - "string"
        cutoff:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      exampleSetFlag: false
      types:
      - "object"
    SPARQLQuery:
      properties:
        queryID:
          exampleSetFlag: false
          types:
          - "string"
        queryDescription:
          exampleSetFlag: false
          types:
          - "string"
        queryCode:
          exampleSetFlag: false
          types:
          - "string"
        constructResultsRDFSyntax:
          exampleSetFlag: false
          types:
          - "string"
        mappingParameters:
          exampleSetFlag: false
          types:
          - "string"
        semantics:
          exampleSetFlag: false
          types:
          - "string"
        constructCode:
          exampleSetFlag: false
          types:
          - "string"
        queryTags:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Tag"
            exampleSetFlag: false
          types:
          - "array"
        selectedMappingIds:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        virtualEntityQueryInfos:
          $ref: "#/components/schemas/VirtualEntityQueryInfos"
          exampleSetFlag: false
        languages:
          exampleSetFlag: false
          types:
          - "string"
        chartConfiguration:
          $ref: "#/components/schemas/ChartConfiguration"
          exampleSetFlag: false
        entryCreation:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        entryLastModification:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        creator:
          exampleSetFlag: false
          types:
          - "string"
        publicationRequestDate:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        publicationResponseDate:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
      exampleSetFlag: false
      types:
      - "object"
    SparqlingSPARQLQuery:
      properties:
        user:
          exampleSetFlag: false
          types:
          - "string"
        sparqlQuery:
          $ref: "#/components/schemas/SPARQLQuery"
          exampleSetFlag: false
        queryGraph:
          $ref: "#/components/schemas/QueryGraph"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    SparqlingVirtualEntity:
      properties:
        entity:
          $ref: "#/components/schemas/VirtualEntity"
          exampleSetFlag: false
        sparqlingSPARQLQuery:
          $ref: "#/components/schemas/SparqlingSPARQLQuery"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    SparqlingVirtualEntities:
      properties:
        entities:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/SparqlingVirtualEntity"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    DataSourceInfoEntry:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
        dataSourceUsername:
          exampleSetFlag: false
          types:
          - "string"
        jdbcUrl:
          exampleSetFlag: false
          types:
          - "string"
        jdbcDriver:
          exampleSetFlag: false
          types:
          - "string"
        jdbcUsername:
          exampleSetFlag: false
          types:
          - "string"
        jdbcPassword:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    DataSourceMetadata:
      properties:
        info:
          $ref: "#/components/schemas/DataSourceInfoEntry"
          exampleSetFlag: false
        dataSourceName:
          exampleSetFlag: false
          types:
          - "string"
        catalogName:
          exampleSetFlag: false
          types:
          - "string"
        schemas:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
        schemaMetadata:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    SQLQuery:
      properties:
        queryCode:
          exampleSetFlag: false
          types:
          - "string"
        dbName:
          exampleSetFlag: false
          types:
          - "string"
        paramValues:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    JDBCDriver:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        version:
          exampleSetFlag: false
          types:
          - "string"
        urlTemplate:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    Agent:
      properties:
        agentIri:
          exampleSetFlag: false
          types:
          - "string"
        agentLabels:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Label"
            exampleSetFlag: false
          types:
          - "array"
        agentWebsite:
          exampleSetFlag: false
          types:
          - "string"
        agentEmail:
          exampleSetFlag: false
          types:
          - "string"
        agentAddress:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    KnowledgeGraph:
      properties:
        kgIri:
          exampleSetFlag: false
          types:
          - "string"
        kgTitle:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Label"
            exampleSetFlag: false
          types:
          - "array"
        kgCreator:
          $ref: "#/components/schemas/User"
          exampleSetFlag: false
        kgPublisher:
          $ref: "#/components/schemas/Agent"
          exampleSetFlag: false
        kgContributors:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/User"
            exampleSetFlag: false
          types:
          - "array"
        kgRightsHolder:
          $ref: "#/components/schemas/Agent"
          exampleSetFlag: false
        kgCreationTs:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        kgLastModifiedTs:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        kgDescriptions:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Label"
            exampleSetFlag: false
          types:
          - "array"
        kgTriples:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        prefixes:
          exampleSetFlag: false
          types:
          - "string"
        kgType:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    KnowledgeGraphDestination:
      properties:
        destination:
          exampleSetFlag: false
          types:
          - "string"
        namedGraph:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    KnowledgeGraphFile:
      properties:
        file:
          $ref: "#/components/schemas/FileInfo"
          exampleSetFlag: false
        destination:
          $ref: "#/components/schemas/KnowledgeGraphDestination"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    KnowledgeGraphUnion:
      properties:
        sourceKg:
          exampleSetFlag: false
          types:
          - "string"
        target:
          $ref: "#/components/schemas/KnowledgeGraphDestination"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    KnowledgeGraphOntologyUnion:
      properties:
        source:
          $ref: "#/components/schemas/OntologyVersion"
          exampleSetFlag: false
        target:
          $ref: "#/components/schemas/KnowledgeGraphDestination"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    SPARQLQueryExecution:
      properties:
        queryID:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    KgConstructResults:
      properties:
        execution:
          $ref: "#/components/schemas/SPARQLQueryExecution"
          exampleSetFlag: false
        source:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    KnowledgeGraphDestinationQueryKg:
      properties:
        source:
          $ref: "#/components/schemas/KgConstructResults"
          exampleSetFlag: false
        target:
          $ref: "#/components/schemas/KnowledgeGraphDestination"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    KnowledgeGraphFileDestination:
      properties:
        kgDestination:
          $ref: "#/components/schemas/KnowledgeGraphDestination"
          exampleSetFlag: false
        fileNames:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    OntologyID:
      properties:
        ontologyName:
          exampleSetFlag: false
          types:
          - "string"
        ontologyVersion:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    MastroID:
      properties:
        ontologyID:
          $ref: "#/components/schemas/OntologyID"
          exampleSetFlag: false
        mappingID:
          exampleSetFlag: false
          types:
          - "string"
        datasourceID:
          exampleSetFlag: false
          types:
          - "string"
        avpID:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    OBDAConstructResults:
      properties:
        execution:
          $ref: "#/components/schemas/SPARQLQueryExecution"
          exampleSetFlag: false
        source:
          $ref: "#/components/schemas/MastroID"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    KnowledgeGraphDestinationQueryOBDA:
      properties:
        source:
          $ref: "#/components/schemas/OBDAConstructResults"
          exampleSetFlag: false
        target:
          $ref: "#/components/schemas/KnowledgeGraphDestination"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    CsvImportInfo:
      properties:
        kgDestination:
          $ref: "#/components/schemas/KnowledgeGraphDestination"
          exampleSetFlag: false
        fileName:
          exampleSetFlag: false
          types:
          - "string"
        constructTemplate:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    EmptyUnfoldingEntities:
      properties:
        emptyUnfoldingClasses:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        emptyUnfoldingObjectProperties:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        emptyUnfoldingDataProperties:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    Endpoint:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
        mastroID:
          $ref: "#/components/schemas/MastroID"
          exampleSetFlag: false
        user:
          exampleSetFlag: false
          types:
          - "string"
        restartNeeded:
          exampleSetFlag: false
          types:
          - "boolean"
        autoStart:
          exampleSetFlag: false
          types:
          - "boolean"
        emptyUnfoldingEntities:
          $ref: "#/components/schemas/EmptyUnfoldingEntities"
          exampleSetFlag: false
      exampleSetFlag: false
      types:
      - "object"
    MastroConfigurationParam:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        value:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    MastroProperties:
      properties:
        mastroProperties:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/MastroConfigurationParam"
            exampleSetFlag: false
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    ExportInfo:
      properties:
        qidsys:
          exampleSetFlag: false
          types:
          - "string"
        sparqlCode:
          exampleSetFlag: false
          types:
          - "string"
        sparqlConstructCode:
          exampleSetFlag: false
          types:
          - "string"
        sqlCode:
          exampleSetFlag: false
          types:
          - "string"
        semantics:
          exampleSetFlag: false
          types:
          - "string"
        reasoning:
          exampleSetFlag: false
          types:
          - "boolean"
        jsonExportAdapterInfo:
          exampleSetFlag: false
          types:
          - "string"
        endpoinName:
          exampleSetFlag: false
          types:
          - "string"
        queryCatalogName:
          exampleSetFlag: false
          types:
          - "string"
        executionTimestamp:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        userName:
          exampleSetFlag: false
          types:
          - "string"
        exportFilePath:
          exampleSetFlag: false
          types:
          - "string"
        answersNumber:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        elapsedTime:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        size:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        queryHeadVarTypes:
          exampleSetFlag: false
          types:
          - "string"
        answersBufferSize:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
        customParams:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    OntologySaturationParameters:
      properties:
        classes:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        annotations:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Entity"
            exampleSetFlag: false
          types:
          - "array"
        newVersionIRI:
          exampleSetFlag: false
          types:
          - "string"
        format:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    Users:
      properties:
        users:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/User"
            exampleSetFlag: false
          types:
          - "array"
        genericRoles:
          exampleSetFlag: false
          items:
            $ref: "#/components/schemas/Role"
            exampleSetFlag: false
          types:
          - "array"
        enabledDomainChecks:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    RoleMonolith:
      properties:
        name:
          exampleSetFlag: false
          types:
          - "string"
        deactivatedMenus:
          exampleSetFlag: false
          items:
            exampleSetFlag: false
            types:
            - "string"
          types:
          - "array"
      exampleSetFlag: false
      types:
      - "object"
    UserFeedbackComment:
      properties:
        rating:
          format: "double"
          exampleSetFlag: false
          types:
          - "number"
        timestamp:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        comment:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    AccessLog:
      properties:
        username:
          exampleSetFlag: false
          types:
          - "string"
        timestamp:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
      exampleSetFlag: false
      types:
      - "object"
    OntologyUsageLog:
      properties:
        ontology:
          $ref: "#/components/schemas/OntologyID"
          exampleSetFlag: false
        count:
          format: "int32"
          exampleSetFlag: false
          types:
          - "integer"
      exampleSetFlag: false
      types:
      - "object"
    QueryUsageLog:
      properties:
        username:
          exampleSetFlag: false
          types:
          - "string"
        timestamp:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        queryCode:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    VKGSnapshot:
      properties:
        id:
          exampleSetFlag: false
          types:
          - "string"
        name:
          exampleSetFlag: false
          types:
          - "string"
        description:
          exampleSetFlag: false
          types:
          - "string"
        lastModification:
          format: "int64"
          exampleSetFlag: false
          types:
          - "integer"
        rdfGraph:
          $ref: "#/components/schemas/RDFGraph"
          exampleSetFlag: false
        customNodeRenderings:
          exampleSetFlag: false
          types:
          - "string"
        customFilters:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
    MwsxTaskSchedulerJobData:
      properties:
        className:
          exampleSetFlag: false
          types:
          - "string"
        jobData:
          exampleSetFlag: false
          types:
          - "string"
        cronExpression:
          exampleSetFlag: false
          types:
          - "string"
      exampleSetFlag: false
      types:
      - "object"
  extensions: {}
