swagger: '2.0'
info:
  title: MWS Endpoints
  description: 'Mastro Web Services: endpoint related routes'
  contact:
    name: Marco Ruzzi
    url: http://www.obdasystems.com
    email: marco.ruzzi@obdasystems.com
  version: 3.0.0
host: default-host
basePath: /base/path
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /endpoint/{name}/prefixes:
    get:
      description: Returns the set of prefixes that are relevant for a given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/com.mwsx.model.Prefix'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/exportFile:
    get:
      description: Returns the file containing exported results for a query on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: fileName
          in: query
          required: false
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.FileInfo'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/exported/{fileName}:
    get:
      description: Returns the content of an export file for the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: fileName
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.FileInfo'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
    delete:
      description: Deletes the export file for the given endpoint from the server, returns 0 in the deletion succeeded
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: fileName
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: integer
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoints/referencing/owlOntology/{name}/version:
    get:
      description: Returns all available endpoints defined on a given ontology name and ontology version
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: version
          in: query
          required: false
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.Endpoints'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoints/referencing/owlOntology/{name}/version/mapping/{ID}:
    get:
      description: Returns all available endpoints defined on a given ontology name, ontology version and mapping
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: ID
          in: path
          required: true
          type: string
        - name: version
          in: query
          required: false
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.Endpoints'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/count:
    post:
      description: Counts the results of the given SPARQL query
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: reasoning
          in: query
          required: false
          type: boolean
        - name: expandSparqlTables
          in: query
          required: false
          type: boolean
        - name: querySemantics
          in: query
          required: false
          type: string
        - name: arg6
          in: body
          required: false
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLQuery'
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.OBDARunQueryInstance'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/new-cq-query/{executionId}/viewOptimizedRewritings:
    get:
      description: Returns the status of the new CQ query identified by <code>queryId</code>.
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: executionId
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.ViewRewritings'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/empties:
    get:
      description: Returns the collection of empty entities relevant for the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.EmptyEntities'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint:
    post:
      description: Creates a new endpoint
      parameters:
        - name: arg2
          in: body
          required: false
          schema:
            $ref: '#/definitions/com.mwsx.model.Endpoint'
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.Endpoint'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/new-cq-query/{executionId}/sqlRewritings:
    get:
      description: Returns the status of the new CQ query identified by <code>queryId</code>.
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: executionId
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SqlRewritings'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/start:
    post:
      description: Starts a new instance of a query on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: reasoning
          in: query
          required: false
          type: boolean
        - name: expandSparqlTables
          in: query
          required: false
          type: boolean
        - name: querySemantics
          in: query
          required: false
          type: string
        - name: answersBufferSize
          in: query
          required: false
          type: string
        - name: skipSqlEvaluation
          in: query
          required: false
          type: string
        - name: useReplaceForUrlEncoding
          in: query
          required: false
          type: string
        - name: lang
          in: query
          required: false
          type: string
        - name: arg11
          in: body
          required: false
          schema:
            type: object
            additionalProperties:
              type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.OBDARunQueryInstance'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/virtualEntity/{veName}:
    get:
      description: Returns the virtual entity from a given endpoint by its name
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: veName
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLResults'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/exportThread/{id}/stats:
    get:
      description: Returns statistics of an export thread running on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.ruzzi.mastro.export.ExportStats'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/status:
    get:
      description: Returns the status of a query running on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLStatus'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/check:
    post:
      description: Checks the syntax of the passed query on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: arg3
          in: body
          required: false
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLQuery'
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/start:
    post:
      description: Starts a new query
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: reasoning
          in: query
          required: false
          type: boolean
        - name: expandSparqlTables
          in: query
          required: false
          type: boolean
        - name: querySemantics
          in: query
          required: false
          type: string
        - name: answersBufferSize
          in: query
          required: false
          type: string
        - name: skipSqlEvaluation
          in: query
          required: false
          type: string
        - name: useReplaceForUrlEncoding
          in: query
          required: false
          type: string
        - name: lang
          in: query
          required: false
          type: string
        - name: arg10
          in: body
          required: false
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLQuery'
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.OBDARunQueryInstance'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/cquery/{queryID}/results:
    get:
      description: Returns a page of a given size of results of a construct query running on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLResults'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/new-cq-query/{executionId}/stop:
    put:
      description: Forces the termination of the new CQ query thread identified by <code>queryId</code>
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: executionId
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLStatus'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/export/direct:
    get:
      description: Returns the stream of the results of a query running on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: exportInfo
          in: query
          required: false
          type: string
      consumes:
        - application/json
      produces:
        - application/octet-stream
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: file
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/exportThread/{id}:
    delete:
      description: No description available for this method
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: boolean
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/exportQueryResults:
    post:
      description: Exports on a separate thread the results of a query running on the given endpoint, the export thread identifier is returned
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: arg3
          in: body
          required: false
          schema:
            $ref: '#/definitions/com.ruzzi.mastro.export.ExportInfo'
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/stop:
    put:
      description: Stops the given endpoint, returns 0 if the stop operation succeeds
      parameters:
        - name: name
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: integer
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoints/running:
    get:
      description: Returns all endpoints with status running
      parameters: []
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.Endpoints'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/viewOptimizedRewritings:
    get:
      description: Returns the optimized view rewritings of a query executed on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.ViewRewritings'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/new-cq-query/{executionId}:
    delete:
      description: Forces the termination of the new CQ query thread identified by <code>queryId</code>
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: executionId
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLStatus'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/exported:
    get:
      description: Returns the collection of export information available for the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/com.ruzzi.mastro.export.ExportInfo'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/count/{queryId}/state:
    get:
      description: Returns the current state of the count thread for the given SPARQL query
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryId
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{eName}/countEntityInstances/stop:
    get:
      description: Starts the executions of the queries that will count the number of instances of each Class of the ontology
      parameters:
        - name: eName
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/queries/ids:
    get:
      description: Returns the IDs of queries loaded in the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: status
          in: query
          required: false
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/sqlRewritings:
    get:
      description: Returns the SQL rewritings of a query executed on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SqlRewritings'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/cquery/exportQueryResults:
    post:
      description: Starts the export thread for a construct query on the given endpoint, the export thread identifier is returned
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: arg3
          in: body
          required: false
          schema:
            $ref: '#/definitions/com.ruzzi.mastro.export.ExportInfo'
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/cquery/{queryID}/results/triples:
    get:
      description: Returns the results for a given construct query in a triples format
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/com.mwsx.model.ConstructImage'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/new-cq-query/{executionId}/status:
    get:
      description: Returns the status of the new CQ query identified by <code>queryId</code>.
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: executionId
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLStatus'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoints:
    get:
      description: Returns all available endpoints
      parameters: []
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.Endpoints'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
    delete:
      description: Deletes all available endpoints
      parameters: []
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.Endpoints'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/stop:
    put:
      description: Forces the termination of the query running on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: integer
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/quarantinedMappingsByEntity:
    post:
      description: Given a SPARQL query, returns a map with entity as key and a set of quarantined mapping identifiers as a value
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: arg3
          in: body
          required: false
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLQuery'
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.RequiresTypeDefinition'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/cquery/{queryID}/results/tabular:
    get:
      description: Returns the results for a given construct query in tabular format
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLResults'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{eName}/instanceChecking/{threadId}/info:
    get:
      description: Get the info about the queries that will count the number of instances of each Class of the ontology
      parameters:
        - name: eName
          in: path
          required: true
          type: string
        - name: threadId
          in: path
          required: true
          type: integer
          format: int64
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.instances.InstanceCheckingInfo'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/new-cq-query/{executionId}/ontologyRewritings:
    get:
      description: Returns the status of the new CQ query identified by <code>queryId</code>.
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: executionId
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.OntologyRewritings'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{eName}/countEntityInstances/info:
    get:
      description: Get the info about the queries that will count the number of instances of each Class of the ontology
      parameters:
        - name: eName
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.instances.CountEntityInstancesInfo'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/exportThreads:
    get:
      description: Returns the export thread identifiers available on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/new-cq-query/start:
    post:
      description: Starts a new new-CQ query thread
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: reasoning
          in: query
          required: false
          type: boolean
        - name: expandSparqlTables
          in: query
          required: false
          type: boolean
        - name: querySemantics
          in: query
          required: false
          type: string
        - name: answersBufferSize
          in: query
          required: false
          type: string
        - name: skipSqlEvaluation
          in: query
          required: false
          type: string
        - name: useReplaceForUrlEncoding
          in: query
          required: false
          type: string
        - name: lang
          in: query
          required: false
          type: string
        - name: arg10
          in: body
          required: false
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLQuery'
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.OBDARunQueryInstance'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/ontologyRewritings:
    get:
      description: Returns the ontology rewriting of a query executed on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.OntologyRewritings'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/sqlDebugRewritings:
    get:
      description: Returns the currently running SQL rewritings of a query executed on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}:
    get:
      description: Returns an endpoint by its name
      parameters:
        - name: name
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.Endpoint'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
    delete:
      description: Deletes the endpoint by its name
      parameters:
        - name: name
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.Endpoint'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/start:
    put:
      description: Starts the given endpoint, returns 0 if the operation succeeds
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: arg3
          in: body
          required: false
          schema:
            $ref: '#/definitions/com.mwsx.model.MastroProperties'
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: integer
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/cquery/{queryID}/results/rdfGraph:
    get:
      description: Returns the results for a given construct query in tabular format
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.rdfgraph.RDFGraph'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/queryRecordInfo:
    get:
      description: Returns the query record info of a certain query running on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.QueryRecordInfo'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/count/{queryId}/error:
    get:
      description: Returns the current state of the count thread for the given SPARQL query
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryId
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/exportThread/{id}/status:
    get:
      description: Returns the status of an export thread running on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{eName}/mappingAnalysisReport:
    get:
      description: No description available for this method
      parameters:
        - name: eName
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/it.uniroma1.dis.quonto.mapping.analysis.model.MappingReport'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/fullSparqlDetails:
    get:
      description: Returns the report of a Full Sparql query executed on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.ruzzi.fullsparql.FullSparqlQueryReport'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/queryRecordInfos:
    get:
      description: Returns the query record info of all the queries running on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/com.mwsx.model.QueryRecordInfo'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/cquery/{queryID}/export:
    get:
      description: Returns the file content of the export thread of a construct query running on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.FileInfo'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/exportThread/{id}/file:
    get:
      description: Streams the file content of an export thread run on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/octet-stream
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: file
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/new-cq-query/{executionId}/results:
    get:
      description: Returns the results of the new CQ query <code>queryID</code>. The results are paginated in pages of size <code>pagesize</code>, and the route returns page number <code>pagenumber</code>
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: executionId
          in: path
          required: true
          type: string
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLResults'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/count/{queryId}/stop:
    put:
      description: Forces the count thread of the given SPARQL query to stop
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryId
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: integer
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/cquery/start:
    post:
      description: Starts the SPARQL construct query on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: reasoning
          in: query
          required: false
          type: boolean
        - name: expandSparqlTables
          in: query
          required: false
          type: boolean
        - name: querySemantics
          in: query
          required: false
          type: string
        - name: answersBufferSize
          in: query
          required: false
          type: string
        - name: skipSqlEvaluation
          in: query
          required: false
          type: string
        - name: useReplaceForUrlEncoding
          in: query
          required: false
          type: string
        - name: lang
          in: query
          required: false
          type: string
        - name: arg10
          in: body
          required: false
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLQuery'
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.OBDARunQueryInstance'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/exportThread/{id}/stop:
    put:
      description: Stops the execution of an export thread on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{eName}/countEntityInstances:
    get:
      description: Count the number of instances of the Class or the Object Property of the ontology
      parameters:
        - name: eName
          in: path
          required: true
          type: string
        - name: classIRI
          in: query
          required: false
          type: string
        - name: objectPropertyIRI
          in: query
          required: false
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: integer
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/viewRewritings:
    get:
      description: Returns the view rewritings of a query executed on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.ViewRewritings'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/{queryID}/results:
    get:
      description: Returns the results of the query running on the given endpoint, the results returned contain a page (pagenumber) of a given size (pagesize)
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: pagesize
          in: query
          required: false
          type: integer
          format: int32
        - name: pagenumber
          in: query
          required: false
          type: integer
          format: int32
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLResults'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{eName}/countEntityInstances/start:
    get:
      description: Starts the executions of the queries that will count the number of instances of each Class and Object Property of the ontology
      parameters:
        - name: eName
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/status:
    get:
      description: Returns the status of the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.EndpointStatus'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/new-cq-query/{executionId}/viewRewritings:
    get:
      description: Returns the status of the new CQ query identified by <code>queryId</code>.
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: executionId
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.ViewRewritings'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{eName}/instanceChecking/{threadId}/stop:
    get:
      description: Starts the executions of the queries that will count the number of instances of each Class of the ontology
      parameters:
        - name: eName
          in: path
          required: true
          type: string
        - name: threadId
          in: path
          required: true
          type: integer
          format: int64
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: integer
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/new-cq-query/{executionId}/sqlDebugRewritings:
    get:
      description: Returns the status of the new CQ query identified by <code>queryId</code>.
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: executionId
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/count/{queryId}/result:
    get:
      description: Returns the counts the results of a SPARQL query executed on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryId
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: integer
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoints/referencing/datasource/{name}:
    get:
      description: Returns all available endpoints that are defined for a specific datasource
      parameters:
        - name: name
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.Endpoints'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/cquery/{queryID}/start:
    post:
      description: Starts the construct query with the provided identified on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
        - name: reasoning
          in: query
          required: false
          type: boolean
        - name: expandSparqlTables
          in: query
          required: false
          type: boolean
        - name: querySemantics
          in: query
          required: false
          type: string
        - name: answersBufferSize
          in: query
          required: false
          type: string
        - name: skipSqlEvaluation
          in: query
          required: false
          type: string
        - name: useReplaceForUrlEncoding
          in: query
          required: false
          type: string
        - name: lang
          in: query
          required: false
          type: string
        - name: arg11
          in: body
          required: false
          schema:
            type: object
            additionalProperties:
              type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.OBDARunQueryInstance'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/query/count/{queryId}:
    delete:
      description: Deletes the count thread on the given endpoint for a SPARQL query
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryId
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: integer
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{eName}/instanceChecking/start:
    post:
      description: Starts the executions of the queries that will count the number of instances of each Class of the ontology
      parameters:
        - name: eName
          in: path
          required: true
          type: string
        - name: instance
          in: query
          required: false
          type: string
        - name: filterFathers
          in: query
          required: false
          type: boolean
        - name: filterNonMatchingTemplates
          in: query
          required: false
          type: boolean
        - name: arg6
          in: body
          required: false
          schema:
            $ref: array
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: integer
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/emptyUnfoldingEntities:
    get:
      description: Returns the collection of entities with empty unfolding that are relevant for the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.EmptyUnfoldingEntities'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/queries:
    get:
      description: Returns the current state of all the queries in status <code>status</code> loaded in the endpoint named <code>name</code>
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: status
          in: query
          required: false
          type: string
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/com.mwsx.model.SPARQLStatus'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
  /endpoint/{name}/cquery/{queryID}/status:
    get:
      description: Returns the execution status of construct query on the given endpoint
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: queryID
          in: path
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - ENDPOINTS
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/com.mwsx.model.SPARQLStatus'
        '401':
          description: The user does not have sufficient privileges to invoke this service
        '403':
          description: User not authorized due to wrong credentials
        '500':
          description: An internal server error occurred while performing the request
        '510':
          description: This method is currently not implemented
definitions:
  com.mwsx.model.instances.InstanceCheckingInfo:
    title: com.mwsx.model.instances.InstanceCheckingInfo
    type: object
    properties:
      resultClasses:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.Entity'
      percentage:
        type: number
      startTime:
        type: integer
        format: int64
      endTime:
        type: integer
        format: int64
      state:
        type: string
  it.uniroma1.dis.quonto.mapping.analysis.model.MappingReport:
    title: it.uniroma1.dis.quonto.mapping.analysis.model.MappingReport
    type: object
    properties:
      dataSourceCoverage:
        $ref: '#/definitions/it.uniroma1.dis.quonto.mapping.analysis.model.DataSourceCoverage'
      ontologyPredicatesStatistics:
        $ref: '#/definitions/it.uniroma1.dis.quonto.mapping.analysis.model.OntologyPredicatesStatistics'
      ontologyCoverage:
        $ref: '#/definitions/it.uniroma1.dis.quonto.mapping.analysis.model.OntologyCoverage'
      quarantinedMappingReport:
        $ref: '#/definitions/it.uniroma1.dis.quonto.mapping.analysis.model.QuarantinedMappingReport'
  com.mwsx.model.rdfgraph.RDFGraphMetadata:
    title: com.mwsx.model.rdfgraph.RDFGraphMetadata
    type: object
    properties:
      annotationProperties:
        type: array
        items:
          type: string
      iri:
        type: string
      defaultLanguage:
        type: string
      languages:
        type: array
        items:
          type: string
      name:
        type: string
      annotations:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Annotation'
      version:
        type: string
      namespaces:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Namespace'
  com.mwsx.model.rdfgraph.ClassInstanceEntity:
    title: com.mwsx.model.rdfgraph.ClassInstanceEntity
    type: object
    properties:
      parentClasses:
        type: array
        items:
          type: string
      shortIri:
        type: string
      dataProperties:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.DataPropertyValue'
  com.mwsx.model.SPARQLStatus:
    title: com.mwsx.model.SPARQLStatus
    type: object
    properties:
      executionTime:
        type: integer
        format: int32
      errorMessages:
        type: array
        items:
          type: string
      percentage:
        type: integer
        format: int32
      numLowLevelQueries:
        type: integer
        format: int32
      numResults:
        type: integer
        format: int32
      numOntologyRewritings:
        type: integer
        format: int32
      numOptimizedQueries:
        type: integer
        format: int32
      hasError:
        type: boolean
      numHighLevelQueries:
        type: integer
        format: int32
      status:
        type: string
  com.mwsx.model.rdfgraph.Namespace:
    title: com.mwsx.model.rdfgraph.Namespace
    type: object
    properties:
      prefixes:
        type: array
        items:
          type: string
      value:
        type: string
  com.mwsx.model.rdfgraph.Viewport:
    title: com.mwsx.model.rdfgraph.Viewport
    type: object
    properties:
      zoom:
        type: number
      pan:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.Position'
  com.mwsx.model.ViewRewritings:
    title: com.mwsx.model.ViewRewritings
    type: object
    properties:
      mappingRewritings:
        type: array
        items:
          type: string
  com.mwsx.model.rdfgraph.FunctionPropertiesEnum:
    title: com.mwsx.model.rdfgraph.FunctionPropertiesEnum
    type: object
    properties:
      TRANSITIVE:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.FunctionPropertiesEnum'
      IRREFLEXIVE:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.FunctionPropertiesEnum'
      ASYMMETRIC:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.FunctionPropertiesEnum'
      SYMMETRIC:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.FunctionPropertiesEnum'
      FUNCTIONAL:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.FunctionPropertiesEnum'
      REFLEXIVE:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.FunctionPropertiesEnum'
      INVERSEFUNCTIONAL:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.FunctionPropertiesEnum'
      value:
        type: string
      $VALUES:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.FunctionPropertiesEnum'
  com.mwsx.model.QueryRecordInfo:
    title: com.mwsx.model.QueryRecordInfo
    type: object
    properties:
      isOntologyRewritingEnabled:
        type: integer
        format: int32
      isBoolean:
        type: integer
        format: int32
      code:
        type: string
      catalogId:
        type: string
      isSQLEvaluationDisabled:
        type: integer
        format: int32
      customParams:
        type: object
        additionalProperties:
          type: string
      description:
        type: string
      id:
        type: string
      qid:
        type: integer
        format: int32
      originalConstructCode:
        type: string
  com.mwsx.model.SqlRewriting:
    title: com.mwsx.model.SqlRewriting
    type: object
    properties:
      query:
        type: string
      numResults:
        type: integer
        format: int32
      time:
        type: integer
        format: int32
  it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceColumnReference:
    title: it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceColumnReference
    type: object
    properties:
      tableName:
        type: string
      columnName:
        type: string
  com.mwsx.model.Tag:
    title: com.mwsx.model.Tag
    type: object
    properties:
      color:
        type: string
      name:
        type: string
      description:
        type: string
  com.mwsx.model.FileInfo:
    title: com.mwsx.model.FileInfo
    type: object
    properties:
      fileName:
        type: string
      fileType:
        type: string
      content:
        type: string
  com.mwsx.model.Entity:
    title: com.mwsx.model.Entity
    type: object
    properties:
      entityLabels:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.Label'
      isDeprecated:
        type: boolean
      entityIRI:
        type: string
      entityType:
        type: string
      entityPrefixIRI:
        type: string
      entityRemainder:
        type: string
      entityID:
        type: string
  com.mwsx.model.rdfgraph.Theme:
    title: com.mwsx.model.rdfgraph.Theme
    type: object
    properties:
      name:
        type: string
      id:
        type: string
      colours:
        type: string
  com.mwsx.model.ConstructTriple:
    title: com.mwsx.model.ConstructTriple
    type: object
    properties:
      predicate:
        type: string
      subject:
        type: string
      object:
        type: string
  com.mwsx.model.OntologyRewritings:
    title: com.mwsx.model.OntologyRewritings
    type: object
    properties:
      ontologyRewritings:
        type: array
        items:
          type: string
  com.mwsx.model.SPARQLQuery:
    title: com.mwsx.model.SPARQLQuery
    type: object
    properties:
      selectedMappingIds:
        type: array
        items:
          type: string
      chartConfiguration:
        $ref: '#/definitions/com.mwsx.model.ChartConfiguration'
      languages:
        type: string
      mappingParameters:
        type: object
        additionalProperties:
          type: string
      semantics:
        type: string
      constructCode:
        type: string
      queryTags:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.Tag'
      queryDescription:
        type: string
      queryID:
        type: string
      queryCode:
        type: string
      isConstruct:
        type: boolean
      constructResultsRDFSyntax:
        type: string
      virtualEntityQueryInfos:
        $ref: '#/definitions/com.ruzzi.connectors.virtual.VirtualEntityQueryInfos'
  it.uniroma1.dis.quonto.mapping.analysis.model.OntologyPredicatesStatistics:
    title: it.uniroma1.dis.quonto.mapping.analysis.model.OntologyPredicatesStatistics
    type: object
    properties:
      predicatesStatistics:
        type: object
        additionalProperties:
          type: integer
      classesStatistics:
        type: object
        additionalProperties:
          type: integer
      dataPropertiesStatistics:
        type: object
        additionalProperties:
          type: integer
      objectPropertiesStatistics:
        type: object
        additionalProperties:
          type: integer
  com.mwsx.model.SPARQLResults:
    title: com.mwsx.model.SPARQLResults
    type: object
    properties:
      headTerms:
        type: array
        items:
          type: string
      headTypes:
        type: object
      construct:
        type: boolean
      results:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/com.mwsx.model.SPARQLResult'
  com.mwsx.model.rdfgraph.Edge:
    title: com.mwsx.model.rdfgraph.Edge
    type: object
    properties:
      sourceId:
        type: string
      targetId:
        type: string
      breakpoints:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Position'
  com.ruzzi.mastro.export.ExportStats:
    title: com.ruzzi.mastro.export.ExportStats
    type: object
    properties:
      resultsNumber:
        type: integer
        format: int32
      exportTime:
        type: integer
        format: int64
  it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceTableColumnMetadata:
    title: it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceTableColumnMetadata
    type: object
    properties:
      size:
        type: integer
        format: int32
      nullable:
        type: string
      generated:
        type: string
      dataTypeName:
        type: string
      decimals:
        type: integer
        format: int32
      name:
        type: string
      dataTypeId:
        type: integer
        format: int32
      ordinalPosition:
        type: integer
        format: int32
  com.mwsx.model.rdfgraph.RDFGraph:
    title: com.mwsx.model.rdfgraph.RDFGraph
    type: object
    properties:
      metadata:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.RDFGraphMetadata'
      creator:
        type: string
      classInstanceEntities:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.ClassInstanceEntity'
      entities:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Entity'
      diagrams:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Diagram'
      modelType:
        type: string
      config:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.RDFGraphConfig'
      selectedDiagramId:
        type: integer
      actions:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Action'
  com.mwsx.model.Endpoint:
    title: com.mwsx.model.Endpoint
    type: object
    properties:
      restartNeeded:
        type: boolean
      name:
        type: string
      description:
        type: string
      user:
        type: string
      mastroID:
        $ref: '#/definitions/com.mwsx.model.MastroID'
  com.mwsx.model.OBDARunQueryInstance:
    title: com.mwsx.model.OBDARunQueryInstance
    type: object
    properties:
      executionId:
        type: string
      count:
        type: boolean
      computedSemantics:
        type: string
      sparql:
        $ref: '#/definitions/com.mwsx.model.SPARQLQuery'
  com.mwsx.model.rdfgraph.TypesEnum:
    title: com.mwsx.model.rdfgraph.TypesEnum
    type: object
    properties:
      SAME:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      COMPLETE_DISJOINT_UNION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      COMPLEMENT:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      INPUT:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      ENUMERATION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      CLASS:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      VALUE:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      INSTANCE_OF:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      MEMBERSHIP:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      DISJOINT_UNION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      HAS_KEY:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      INCLUSION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      value:
        type: string
      RANGE_RESTRICTION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      NEUTRAL:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      $VALUES:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      VALUE_DOMAIN:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      ROLE_INVERSE:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      ROLE_CHAIN:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      LITERAL:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      DIFFERENT:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      DATATYPE_RESTRICTION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      OBJECT_PROPERTY:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      COMPLETE_UNION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      PROPERTY_ASSERTION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      DOMAIN_RESTRICTION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      EQUIVALENCE:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      FACET:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      INTERSECTION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      DATA_PROPERTY:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      CLASS_INSTANCE:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      ATTRIBUTE_EDGE:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      UNION:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
      INDIVIDUAL:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
  com.mwsx.model.SqlRewritings:
    title: com.mwsx.model.SqlRewritings
    type: object
    properties:
      viewRewritings:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.SqlRewriting'
  com.mwsx.model.MastroConfigurationParam:
    title: com.mwsx.model.MastroConfigurationParam
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  com.mwsx.model.rdfgraph.HierarchySuperclasses:
    title: com.mwsx.model.rdfgraph.HierarchySuperclasses
    type: object
    properties:
      classEntity:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.Entity'
      complete:
        type: boolean
  it.uniroma1.dis.quonto.mapping.analysis.model.DataSourceCoverage:
    title: it.uniroma1.dis.quonto.mapping.analysis.model.DataSourceCoverage
    type: object
    properties:
      tables:
        type: array
        items:
          $ref: '#/definitions/it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceTableMetadata'
      unmappedTableCount:
        type: integer
        format: int32
      mappedTables:
        type: array
        items:
          $ref: '#/definitions/it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceTableMetadata'
      unmappedTables:
        type: array
        items:
          $ref: '#/definitions/it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceTableMetadata'
      mappedTableCount:
        type: integer
        format: int32
      totalTableCount:
        type: integer
        format: int32
  com.ruzzi.connectors.virtual.VirtualEntityQueryInfos:
    title: com.ruzzi.connectors.virtual.VirtualEntityQueryInfos
    type: object
    properties:
      virtualEntityname:
        type: string
      idSelection:
        type: string
      fieldFilters:
        type: object
        additionalProperties:
          type: string
  com.mwsx.model.ChartConfiguration:
    title: com.mwsx.model.ChartConfiguration
    type: object
    properties:
      yVariables:
        type: array
        items:
          type: string
      series:
        type: string
      xVariable:
        type: string
      chartType:
        type: string
      cutoff:
        type: integer
        format: int32
  com.mwsx.model.rdfgraph.Position:
    title: com.mwsx.model.rdfgraph.Position
    type: object
    properties:
      x:
        type: number
      'y':
        type: number
  com.mwsx.model.Label:
    title: com.mwsx.model.Label
    type: object
    properties:
      lang:
        type: string
      content:
        type: string
  com.mwsx.model.instances.EntityCount:
    title: com.mwsx.model.instances.EntityCount
    type: object
    properties:
      count:
        type: integer
        format: int64
      state:
        type: string
      error:
        type: string
      entity:
        $ref: '#/definitions/com.mwsx.model.Entity'
  com.mwsx.model.MastroProperties:
    title: com.mwsx.model.MastroProperties
    type: object
    properties:
      mastroProperties:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.MastroConfigurationParam'
  com.ruzzi.unfold.model.management.QuarantineReason:
    title: com.ruzzi.unfold.model.management.QuarantineReason
    type: object
    properties:
      reason:
        type: string
      objectID:
        type: string
      objectType:
        type: integer
        format: int32
  com.mwsx.model.rdfgraph.RDFGraphConfig:
    title: com.mwsx.model.rdfgraph.RDFGraphConfig
    type: object
    properties:
      entityNameType:
        type: string
      themes:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Theme'
      renderers:
        type: array
        items:
          type: string
      language:
        type: string
      filters:
        type: array
        items:
          type: string
      widgets:
        type: string
      selectedTheme:
        type: string
  com.mwsx.model.rdfgraph.Action:
    title: com.mwsx.model.rdfgraph.Action
    type: object
    properties:
      subactions:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Action'
      subject:
        type: string
      operationType:
        type: string
      involvedElements:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.ActionInvolvedElements'
      user:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.ActionUser'
      previousState:
        type: string
      timestamp:
        type: integer
        format: int64
  com.mwsx.model.Endpoints:
    title: com.mwsx.model.Endpoints
    type: object
    properties:
      endpoints:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.Endpoint'
  com.ruzzi.unfold.model.Predicate:
    title: com.ruzzi.unfold.model.Predicate
    type: object
    properties:
      arity:
        type: integer
        format: int32
      serialVersionUID:
        type: integer
        format: int64
      name:
        type: string
      shortName:
        type: string
  it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceForeignKeyMetadata:
    title: it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceForeignKeyMetadata
    type: object
    properties:
      references:
        type: object
        additionalProperties:
          $ref: '#/definitions/it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceColumnReference'
  com.mwsx.model.EmptyEntities:
    title: com.mwsx.model.EmptyEntities
    type: object
    properties:
      emptyObjectProperties:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.Entity'
      emptyDataProperties:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.Entity'
      emptyClasses:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.Entity'
  com.mwsx.model.SPARQLResult:
    title: com.mwsx.model.SPARQLResult
    type: object
    properties:
      shortIRI:
        type: string
      type:
        type: string
      lang:
        type: string
      value:
        type: string
  com.mwsx.model.RequiresTypeDefinition:
    title: com.mwsx.model.RequiresTypeDefinition
    type: object
    properties:
      name:
        type: string
  com.mwsx.model.rdfgraph.Node:
    title: com.mwsx.model.rdfgraph.Node
    type: object
    properties:
      labelPosition:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.Position'
      position:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.Position'
  com.mwsx.model.OBDAStatus:
    title: com.mwsx.model.OBDAStatus
    type: object
    properties:
      LOADING:
        type: string
      lastError:
        type: string
      RUNNING:
        type: string
      UNAVAILABLE:
        type: string
      ERROR:
        type: string
      id:
        $ref: '#/definitions/com.mwsx.model.MastroID'
      status:
        type: string
  com.mwsx.model.rdfgraph.ActionInvolvedElements:
    title: com.mwsx.model.rdfgraph.ActionInvolvedElements
    type: object
    properties:
      nodes:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Node'
      hierarchies:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Hierarchy'
      edges:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Edge'
  com.mwsx.model.instances.CountEntityInstancesInfo:
    title: com.mwsx.model.instances.CountEntityInstancesInfo
    type: object
    properties:
      countsMap:
        type: object
        additionalProperties:
          $ref: '#/definitions/com.mwsx.model.instances.EntityCount'
      percentage:
        type: number
      startTime:
        type: integer
        format: int64
      endTime:
        type: integer
        format: int64
      state:
        type: string
  it.uniroma1.dis.quonto.mapping.analysis.model.OntologyCoverage:
    title: it.uniroma1.dis.quonto.mapping.analysis.model.OntologyCoverage
    type: object
    properties:
      predicates:
        type: array
        items:
          $ref: '#/definitions/com.ruzzi.unfold.model.Predicate'
      unmappedPredicates:
        type: array
        items:
          $ref: '#/definitions/com.ruzzi.unfold.model.Predicate'
      mappedPredicates:
        type: array
        items:
          $ref: '#/definitions/com.ruzzi.unfold.model.Predicate'
      unmappedPredicatesCount:
        type: integer
        format: int32
      totalPredicatesCount:
        type: integer
        format: int32
      mappedPredicatesCount:
        type: integer
        format: int32
  com.mwsx.model.MastroID:
    title: com.mwsx.model.MastroID
    type: object
    properties:
      mappingID:
        type: string
      datasourceID:
        type: string
      avpID:
        type: string
      ontologyID:
        $ref: '#/definitions/com.mwsx.model.OntologyID'
  com.ruzzi.fullsparql.CoreQueryInfo:
    title: com.ruzzi.fullsparql.CoreQueryInfo
    type: object
    properties:
      coreQueryId:
        type: string
      sparqlCode:
        type: string
  it.uniroma1.dis.quonto.mapping.analysis.model.QuarantinedMappingReport:
    title: it.uniroma1.dis.quonto.mapping.analysis.model.QuarantinedMappingReport
    type: object
    properties:
      viewDefinitionsCount:
        type: integer
        format: int32
      mappingsCount:
        type: integer
        format: int32
      quarantinedMappingsCount:
        type: integer
        format: int32
      quarantineReasonsByViewName:
        type: object
      quarantineReasonsByMappingId:
        type: object
      quarantinedViewDefinitionsCount:
        type: integer
        format: int32
  com.mwsx.model.OntologyID:
    title: com.mwsx.model.OntologyID
    type: object
    properties:
      ontologyVersion:
        type: string
      ontologyName:
        type: string
  com.mwsx.model.EndpointStatus:
    title: com.mwsx.model.EndpointStatus
    type: object
    properties:
      restartNeeded:
        type: boolean
      config:
        $ref: '#/definitions/com.mwsx.model.MastroProperties'
      status:
        $ref: '#/definitions/com.mwsx.model.OBDAStatus'
  it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceTableMetadata:
    title: it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceTableMetadata
    type: object
    properties:
      catalogName:
        type: string
      foreignKeys:
        type: array
        items:
          $ref: '#/definitions/it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceForeignKeyMetadata'
      columns:
        type: array
        items:
          $ref: '#/definitions/it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceTableColumnMetadata'
      keys:
        $ref: '#/definitions/it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceKeyMetadata'
      name:
        type: string
      schemaName:
        type: string
  com.mwsx.model.rdfgraph.ActionUser:
    title: com.mwsx.model.rdfgraph.ActionUser
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      name:
        type: string
      email:
        type: string
  com.mwsx.model.Prefix:
    title: com.mwsx.model.Prefix
    type: object
    properties:
      name:
        type: string
      namespace:
        type: string
  it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceKeyMetadata:
    title: it.uniroma1.dis.quonto.core.datasourcemanager.DataSourceKeyMetadata
    type: object
    properties:
      columnNames:
        type: array
        items:
          type: string
      name:
        type: string
      columnPosition:
        type: array
        items:
          type: integer
      tableName:
        type: string
  com.mwsx.model.rdfgraph.DataPropertyValue:
    title: com.mwsx.model.rdfgraph.DataPropertyValue
    type: object
    properties:
      iri:
        type: string
      datatype:
        type: string
      language:
        type: string
      value:
        type: string
  com.mwsx.model.rdfgraph.Annotation:
    title: com.mwsx.model.rdfgraph.Annotation
    type: object
    properties:
      datatype:
        type: string
      property:
        type: string
      language:
        type: string
      lexicalForm:
        type: string
  com.mwsx.model.rdfgraph.Diagram:
    title: com.mwsx.model.rdfgraph.Diagram
    type: object
    properties:
      nodes:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Node'
      lastViewportState:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.Viewport'
      name:
        type: string
      edges:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Edge'
      id:
        type: integer
  com.mwsx.model.rdfgraph.Entity:
    title: com.mwsx.model.rdfgraph.Entity
    type: object
    properties:
      isDataPropertyFunctional:
        type: boolean
      datatype:
        type: string
      fullIri:
        type: string
      annotations:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Annotation'
      functionProperties:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.FunctionPropertiesEnum'
  com.mwsx.model.EmptyUnfoldingEntities:
    title: com.mwsx.model.EmptyUnfoldingEntities
    type: object
    properties:
      emptyUnfoldingDataProperties:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.Entity'
      emptyUnfoldingObjectProperties:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.Entity'
      emptyUnfoldingClasses:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.Entity'
  com.ruzzi.mastro.export.ExportInfo:
    title: com.ruzzi.mastro.export.ExportInfo
    type: object
    properties:
      queryCatalogName:
        type: string
      customParams:
        type: object
        additionalProperties:
          type: string
      reasoning:
        type: boolean
      sqlCode:
        type: string
      qidsys:
        type: string
      semantics:
        type: string
      jsonExportAdapterInfo:
        type: string
      userName:
        type: string
      exportFilePath:
        type: string
      queryHeadVarTypes:
        type: object
      endpoinName:
        type: string
      answersNumber:
        type: integer
        format: int32
      size:
        type: integer
        format: int64
      answersBufferSize:
        type: integer
        format: int32
      sparqlCode:
        type: string
      sparqlConstructCode:
        type: string
      executionTimestamp:
        type: integer
        format: int64
      elapsedTime:
        type: integer
        format: int64
  com.mwsx.model.rdfgraph.Hierarchy:
    title: com.mwsx.model.rdfgraph.Hierarchy
    type: object
    properties:
      superclasses:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.HierarchySuperclasses'
      inputs:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.rdfgraph.Entity'
      id:
        type: string
      type:
        $ref: '#/definitions/com.mwsx.model.rdfgraph.TypesEnum'
  com.mwsx.model.ConstructImage:
    title: com.mwsx.model.ConstructImage
    type: object
    properties:
      triples:
        type: array
        items:
          $ref: '#/definitions/com.mwsx.model.ConstructTriple'
  com.ruzzi.fullsparql.FullSparqlQueryReport:
    title: com.ruzzi.fullsparql.FullSparqlQueryReport
    type: object
    properties:
      coreQueryInfos:
        type: array
        items:
          $ref: '#/definitions/com.ruzzi.fullsparql.CoreQueryInfo'
      sqlCode:
        type: string
      id:
        type: string
