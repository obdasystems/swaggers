openapi: 3.0.0
info:
  description: API for VKG customizations
  version: 1.0.0
  title: VKG Custom Node Rendering and Custom Filters API Model
  contact:
    email: obdasystems@info.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths: {}
components:
  schemas:
    CustomNodeRenderingMap:
      description: Map <classIri, CustomRendering>
      type: object
      additionalProperties:
        $ref: "#/components/schemas/CustomNodeRendering"
    CustomNodeRendering:
      type: object
      properties:
        classNodes:
          type: object
          properties:
            size:
              type: number
            color:
              type: string
            icon:
              type: string
        instanceNodes:
          type: object
          properties:
            size:
              allOf:
                - $ref: "#/components/schemas/BasePropertyInfo"
                - type: object
                  properties:
                    aggregation:
                      type: string
            color:
              type: object
              allOf:
                - $ref: "#/components/schemas/BasePropertyInfo"
                - type: object
                  properties:
                    aggregation:
                      type: string
                    scale:
                      type: object
                      required:
                        - scaleID
                      properties:
                        scaleID:
                          description: Color scale identifier for chroma.js (i.e "OrRd"), @see https://gka.github.io/chroma.js/#chroma-brewer
                          type: string
                        intervals:
                          description: Custom scale intervals, to be used with chroma.js. @see https://gka.github.io/chroma.js/#scale-classes
                          type: array
                          items:
                            type: number
            icon:
              $ref: "#/components/schemas/BasePropertyInfo"
            location:
              $ref: "#/components/schemas/BasePropertyInfo"
            coordinates:
              type: object
              required:
                - dataPropertyIriX
                - dataPropertyIriY
              properties:
                dataPropertyIriX:
                  type: string
                dataPropertyIriY:
                  type: string
    BasePropertyInfo:
      type: object
      properties:
        inherited:
          type: boolean
        dataPropertyIri:
          type: string
        pathToDataProperty:
          $ref: "https://raw.githubusercontent.com/obdasystems/swaggers/main/apis/sparqling/sparqling.yaml#/components/schemas/OntologyPath"
        log:
          type: boolean
    VKGCustomFilter:
      type: object
      required:
        - active
        - filters
      properties:
        active:
          type: integer
          enum: [0, 1, 2]
        filters:
          type: array
          items:
            $ref: "#/components/schemas/InstanceFilter"
    InstanceFilter:
      type: object
      required:
        - operator
        - values
        - property
      properties:
        operator:
          type: string
        valid:
          type: boolean
        values:
          type: array
          items:
            type: string
        rangeClasses:
          type: array
          items:
            type: string
        rangeDataProperty:
          type: string
        property:
          type: object
          properties:
            iri:
              type: string
            type:
              $ref: "https://raw.githubusercontent.com/obdasystems/swaggers/main/apis/rdf-graph/rdf-graph.yaml#/components/schemas/TypesEnum"
