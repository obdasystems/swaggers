openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/PEPE_2/Grapholscape_Model/1.0.0
info:
  description: This is the API for managing the Ontology Catalog
  version: 1.0.0
  title: Ontology Catalog
  contact:
    email: info@obdasystems.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths: 
  /addToOntologyCatalog:
    put:
      tags:
      - Ontology Catalog
      summary: Add an ontology to the catalog
      description: Add to the triple store all the axioms and their provenance (quads)
      operationId: addToCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://obdasystems.github.io/swaggers/apis/mws/mws.yaml#definitions/com.mwsx.model.OntologyID'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema: 
                type: boolean
  /deleteFromOntologyCatalog:
    put:
      tags:
      - Ontology Catalog
      summary: Delete an ontology from the catalog
      operationId: deleteFromCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://obdasystems.github.io/swaggers/apis/mws/mws.yaml#definitions/com.mwsx.model.OntologyID'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema: 
                type: boolean
                
  /ontologyCatalog/query/start:
    post:
      tags:
      - Ontology Catalog
      summary: Starts a SPARQL query over the catalog
      operationId: startQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://obdasystems.github.io/swaggers/apis/mws/mws.yaml#definitions/com.mwsx.model.SPARQLQuery'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: 'https://obdasystems.github.io/swaggers/apis/mws/mws.yaml#definitions/com.mwsx.model.SPARQLQueryExecution'
  /ontologyCatalog/query/{queryID}/stop:
    put:
      tags:
      - Ontology Catalog
      summary: Stops a SPARQL query over the catalog
      operationId: stopQuery
      parameters:
        - name: queryID
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema: 
                type: boolean
  
  /ontologyCatalog/query/{queryID}/status:
    get:
      description: Check the status of a SPARQL query
      parameters:
        - name: queryID
          in: path
          required: true
          schema: 
            type: string
      tags:
        - Ontology Catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'https://obdasystems.github.io/swaggers/apis/mws/mws.yaml#/definitions/com.mwsx.model.SPARQLStatus'
  /ontologyCatalog/query/{queryID}/results:
    get:
      description: Retrieve the results of a SPARQL query
      parameters:
        - name: queryID
          in: path
          required: true
          schema:
            type: string
        - name: pagesize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - Ontology Catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'https://obdasystems.github.io/swaggers/apis/mws/mws.yaml#/definitions/com.mwsx.model.SPARQLResults'