get:
  summary: Verifies whether a backup copy of a given mapping file exists
  operationId: get__owlOntology_name_version_mapping_ID_backup
  parameters:
  - name: name
    in: path
    required: true
    schema: {type: string}
  - name: mapID
    in: path
    required: true
    schema: {type: string}
  - name: version
    in: query
    required: true
    schema: {type: string}
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema: {type: boolean}
    '401': {description: Unhauthorized}
post:
  summary: Creates a backup copy of a given mapping file
  operationId: post__owlOntology_name_version_mapping_ID_backup
  parameters:
  - name: name
    in: path
    required: true
    schema: {type: string}
  - name: mapID
    in: path
    required: true
    schema: {type: string}
  - name: version
    in: query
    required: true
    schema: {type: string}
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema: {type: boolean}
    '401': {description: Unhauthorized}
put:
  summary: Restore a backup copy of a given mapping file
  operationId: post__owlOntology_name_version_mapping_ID_restore
  parameters:
  - name: name
    in: path
    required: true
    schema: {type: string}
  - name: mapID
    in: path
    required: true
    schema: {type: string}
  - name: version
    in: query
    required: true
    schema: {type: string}
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema: {type: boolean}
    '401': {description: Unhauthorized}
delete:
  summary: Deletes the backup copy of a given mapping file
  operationId: post__owlOntology_name_version_mapping_ID_delete
  parameters:
  - name: name
    in: path
    required: true
    schema: {type: string}
  - name: mapID
    in: path
    required: true
    schema: {type: string}
  - name: version
    in: query
    required: true
    schema: {type: string}
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema: {type: boolean}
    '401': {description: Unhauthorized}
