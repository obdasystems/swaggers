openapi: 3.0.0
info:
  description: This is the API to manage Mastro connections to DBMSs. You can create, update, delete and test connections to DBMSs by means of JDBC connections.
  version: 1.0.0
  title: Datasources API model
  contact:
    email: info@obdasystems.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: '{protocol}://{tenant}{port}/mws/rest/mwsx'
    variables:
      protocol:
        default: https
      tenant:
        default: localhost
      port:
        default: ':8989'
security:
  - apiKey: []
  - jwt: []
paths:
  /datasource/{name}:
    get:
      summary: Returns the data source information by its name
      operationId: get__datasource
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceInfoEntry'
        '401':
          description: Unhauthorized
    put:
      summary: Modifies the data source information by its name
      operationId: put__datasource
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceInfoEntry'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceInfoEntry'
        '401':
          description: Unhauthorized
    delete:
      summary: Deletes a data source information by its name
      operationId: delete__datasource
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceInfoEntry'
        '401':
          description: Unhauthorized
  /datasource/{name}/downloadMetadata:
    get:
      summary: Returns the data source information by its name
      operationId: get__datasource_downloadMetadata
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
        '401':
          description: Unhauthorized
  /datasource/{name}/metadata:
    get:
      summary: Returns the data source information by its name
      operationId: get__datasource_metadata
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceMetadata'
        '401':
          description: Unhauthorized
  /datasource/{name}/updateMetadata:
    put:
      summary: Updates the data source metadata information retrieving it from the JDBC connection
      operationId: put__datasource_updateMetadata
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: schemasList
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceMetadata'
        '401':
          description: Unhauthorized
  /datasource/{name}/uploadMetadata:
    put:
      summary: Uploads the data source metadata information for the specified datasource
      operationId: put__datasource_uploadMetadata
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceMetadata'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceMetadata'
        '401':
          description: Unhauthorized
  /datasource:
    post:
      summary: Creates a new data source information
      operationId: post__datasource
      parameters:
        - name: buildSchema
          in: query
          required: true
          schema:
            type: boolean
        - name: schemasList
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceInfoEntry'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceInfoEntry'
        '401':
          description: Unhauthorized
    get:
      summary: Returns all the data source definitions available
      operationId: get__datasource_list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceInfoEntry'
        '401':
          description: Unhauthorized
    delete:
      summary: Deletes all the available data source information
      operationId: delete__all_datasource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceInfoEntry'
        '401':
          description: Unhauthorized
  /datasource/drivers:
    get:
      summary: Returns the list of available JDBC driver class names
      operationId: get__datasource_driver
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unhauthorized
  /datasource/test:
    post:
      summary: Test a given data source connection
      operationId: testDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceInfoEntry'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTables'
        '401':
          description: Unhauthorized
  /datasource/schemas:
    post:
      summary: Returns the list of schema names available at the datasource
      operationId: getDatasourceSchemas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceInfoEntry'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unhauthorized
  /datasource/{id}/schemas:
    get:
      summary: Returns the list of schemas available in the catalog of a given datasource
      operationId: getSchemas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unhauthorized
  /datasource/schema/{schemaName}/tableNames:
    post:
      summary: Returns the list of table names available at the datasource within the provided schema name
      operationId: getDatasourceTablesForSchema
      parameters:
        - name: schemaName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceInfoEntry'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTableInfo'
        '401':
          description: Unhauthorized
  /datasource/{id}/tables:
    get:
      summary: Returns the list of SourceTables available in the catalog of a given datasource
      operationId: getTables
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTables'
        '401':
          description: Unhauthorized
  /datasource/{id}/tables/results:
    post:
      summary: Returns the preview of a given SQLQuery executed over a given datasource
      operationId: postSQLEx
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SQLQuery'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableContentPreview'
        '401':
          description: Unhauthorized
  /datasource/{id}/table/{tableName}:
    get:
      summary: Returns the source table info available for the table tableName in the catalog of a given datasource
      operationId: getTable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: tableName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTableInfo'
        '401':
          description: Unhauthorized
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-MONOLITH-SESSION-ID
      description: |
        This session ID is generated from Basic Authentication on the login route.
    jwt:
      description: |
        Generate your JWT when you log in. JWT configurations should be placed in `$MASTRO_HOME/config/mastro.jwt` file
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    DataSourceInfoEntry:
      title: DataSourceInfoEntry
      type: object
      properties:
        jdbcDriver:
          type: string
        jdbcUrl:
          type: string
        description:
          type: string
        jdbcPassword:
          type: string
        id:
          type: string
        dataSourceUsername:
          type: string
        isMetadataPresent:
          type: boolean
        jdbcUsername:
          type: string
    FileInfo:
      title: FileInfo
      type: object
      properties:
        fileName:
          type: string
        fileType:
          type: string
        content:
          type: string
    DataSourceColumnReference:
      title: DataSourceColumnReference
      type: object
      properties:
        tableName:
          type: string
        columnName:
          type: string
    DataSourceForeignKeyMetadata:
      title: DataSourceForeignKeyMetadata
      type: object
      properties:
        references:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DataSourceColumnReference'
    DataSourceTableColumnMetadata:
      title: DataSourceTableColumnMetadata
      type: object
      properties:
        size:
          type: integer
          format: int32
        nullable:
          type: string
        generated:
          type: string
        dataTypeName:
          type: string
        decimals:
          type: integer
          format: int32
        name:
          type: string
        dataTypeId:
          type: integer
          format: int32
        ordinalPosition:
          type: integer
          format: int32
    DataSourceKeyMetadata:
      title: DataSourceKeyMetadata
      type: object
      properties:
        columnNames:
          type: array
          items:
            type: string
        name:
          type: string
        columnPosition:
          type: array
          items:
            type: integer
        tableName:
          type: string
    DataSourceTableMetadata:
      title: DataSourceTableMetadata
      type: object
      properties:
        catalogName:
          type: string
        foreignKeys:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceForeignKeyMetadata'
        columns:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceTableColumnMetadata'
        keys:
          $ref: '#/components/schemas/DataSourceKeyMetadata'
        name:
          type: string
        schemaName:
          type: string
    DataSourceSchemaMetadata:
      title: DataSourceSchemaMetadata
      type: object
      properties:
        tables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DataSourceTableMetadata'
        views:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DataSourceTableMetadata'
    DataSourceMetadata:
      title: DataSourceMetadata
      type: object
      properties:
        catalogName:
          type: string
        schemas:
          type: array
          items:
            type: string
        schemaMetadata:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DataSourceSchemaMetadata'
        DEFAULT_SCHEMA_NAME:
          type: string
        dataSourceName:
          type: string
        info:
          $ref: '#/components/schemas/DataSourceInfoEntry'
    SourceTableInfo:
      title: SourceTableInfo
      type: object
      properties:
        columns:
          type: array
          items:
            type: string
        name:
          type: string
    SourceTables:
      title: SourceTables
      type: object
      properties:
        tables:
          type: array
          items:
            $ref: '#/components/schemas/SourceTableInfo'
    SQLQuery:
      title: SQLQuery
      type: object
      properties:
        queryCode:
          type: string
        paramValues:
          type: object
          additionalProperties:
            type: string
        dbName:
          type: string
    TableContentPreview:
      title: TableContentPreview
      type: object
      properties:
        colNames:
          type: array
          items:
            type: string
        content:
          type: array
          items:
            type: array
            items:
              type: string
