openapi: 3.0.0
info:
  description: This is the API for managing Dashboards in Mastro.  Dashboards are used to visualize data from the ontology by means of saved SPARQL queries.
  version: 1.0.0
  title: Dashboards API model
  contact:
    email: info@obdasystems.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: '{protocol}://{tenant}{port}/mws/rest/mwsx'
    variables:
      protocol:
        default: https
      tenant:
        default: localhost
      port:
        default: ':8989'
security:
  - apiKey: []
  - jwt: []
paths:
  /owlOntology/{name}/version/dashboards:
    get:
      summary: GET mwsx/owlOntology/{name}/version/dashboards
      operationId: get__owlOntology_version_dashboards
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboards'
    post:
      summary: POST mwsx/owlOntology/{name}/version/dashboards
      operationId: post__owlOntology_version_dashboards
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboards'
  /owlOntology/{name}/version/dashboard/{dashboardId}/migrate:
    post:
      summary: POST mwsx/owlOntology/{name}/version/dashboard/{dashboardId}/migrate
      operationId: post__owlOntology_version_dashboard_migrate
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: query
          required: true
          schema:
            type: string
        - name: targetVersion
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboards'
  /owlOntology/{name}/version/dashboards/migrate:
    post:
      summary: POST mwsx/owlOntology/{name}/version/dashboards/migrate
      operationId: post__owlOntology_version_dashboards_migrate
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: query
          required: true
          schema:
            type: string
        - name: targetVersion
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboards'
  /owlOntology/{name}/version/dashboard/{dashboardId}:
    put:
      summary: PUT mwsx/owlOntology/{name}/version/dashboard/{dashboardId}
      operationId: put__owlOntology_version_dashboards
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
    delete:
      summary: DELETE mwsx/owlOntology/{name}/version/dashboard/{dashboardId}
      operationId: delete__owlOntology_version_dashboards
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-MONOLITH-SESSION-ID
      description: |
        This session ID is generated from Basic Authentication on the login route.
    jwt:
      description: |
        Generate your JWT when you log in. JWT configurations should be placed in `$MASTRO_HOME/config/mastro.jwt` file
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    IDashboardCardSettings:
      title: IDashboardCardSettings
      type: object
      properties: {}
    DashboardCard:
      title: DashboardCard
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/IDashboardCardSettings'
        backgroundColor:
          type: string
        x:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        'y':
          type: integer
          format: int32
        description:
          type: string
        id:
          type: integer
          format: int32
        title:
          type: string
        height:
          type: integer
          format: int32
    DashboardTab:
      title: DashboardTab
      type: object
      properties:
        cards:
          type: array
          items:
            $ref: '#/components/schemas/DashboardCard'
        compactType:
          type: string
        title:
          type: string
        queryParametersValues:
          type: object
          additionalProperties:
            type: string
    Dashboard:
      title: Dashboard
      type: object
      properties:
        tabs:
          type: array
          items:
            $ref: '#/components/schemas/DashboardTab'
        description:
          type: string
        id:
          type: string
        title:
          type: string
    Dashboards:
      title: Dashboards
      type: object
      properties:
        dashboards:
          type: array
          items:
            $ref: '#/components/schemas/Dashboard'
